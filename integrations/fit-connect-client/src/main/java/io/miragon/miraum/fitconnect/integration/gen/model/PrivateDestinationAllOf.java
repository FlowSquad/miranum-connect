/*
 * Submission API für Antragsverfahren und Berichtspflichten
 * Die FIT-Connect Submission API ermöglicht das Einreichen von Anträgen und Berichten aus vorgelagerten Systemen (z. B. Onlineantragsdiensten, Fachportalen oder Berichtssystemen) an die Systeme der Verwaltung zur elektronischen Verfahrensbearbeitung (z. B. Fachverfahren, Dokumentenmanagementsysteme oder Prozessplattformen). 
 *
 * The version of the OpenAPI document: 1.1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.miragon.miraum.fitconnect.integration.gen.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.miragon.miraum.fitconnect.integration.gen.model.Callback;
import io.miragon.miraum.fitconnect.integration.gen.model.ContactInformation;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PrivateDestinationAllOf
 */
@JsonPropertyOrder({
  PrivateDestinationAllOf.JSON_PROPERTY_CONTACT_INFORMATION,
  PrivateDestinationAllOf.JSON_PROPERTY_CALLBACK
})
@JsonTypeName("PrivateDestination_allOf")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PrivateDestinationAllOf {
  public static final String JSON_PROPERTY_CONTACT_INFORMATION = "contactInformation";
  private ContactInformation contactInformation;

  public static final String JSON_PROPERTY_CALLBACK = "callback";
  private Callback callback;

  public PrivateDestinationAllOf() {
  }

  public PrivateDestinationAllOf contactInformation(ContactInformation contactInformation) {
    
    this.contactInformation = contactInformation;
    return this;
  }

   /**
   * Get contactInformation
   * @return contactInformation
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_CONTACT_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ContactInformation getContactInformation() {
    return contactInformation;
  }


  @JsonProperty(JSON_PROPERTY_CONTACT_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setContactInformation(ContactInformation contactInformation) {
    this.contactInformation = contactInformation;
  }


  public PrivateDestinationAllOf callback(Callback callback) {
    
    this.callback = callback;
    return this;
  }

   /**
   * Get callback
   * @return callback
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CALLBACK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Callback getCallback() {
    return callback;
  }


  @JsonProperty(JSON_PROPERTY_CALLBACK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCallback(Callback callback) {
    this.callback = callback;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PrivateDestinationAllOf privateDestinationAllOf = (PrivateDestinationAllOf) o;
    return Objects.equals(this.contactInformation, privateDestinationAllOf.contactInformation) &&
        Objects.equals(this.callback, privateDestinationAllOf.callback);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contactInformation, callback);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PrivateDestinationAllOf {\n");
    sb.append("    contactInformation: ").append(toIndentedString(contactInformation)).append("\n");
    sb.append("    callback: ").append(toIndentedString(callback)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

