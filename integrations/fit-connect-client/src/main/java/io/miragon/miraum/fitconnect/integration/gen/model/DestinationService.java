/*
 * Submission API für Antragsverfahren und Berichtspflichten
 * Die FIT-Connect Submission API ermöglicht das Einreichen von Anträgen und Berichten aus vorgelagerten Systemen (z. B. Onlineantragsdiensten, Fachportalen oder Berichtssystemen) an die Systeme der Verwaltung zur elektronischen Verfahrensbearbeitung (z. B. Fachverfahren, Dokumentenmanagementsysteme oder Prozessplattformen). 
 *
 * The version of the OpenAPI document: 1.1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.miragon.miraum.fitconnect.integration.gen.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.miragon.miraum.fitconnect.integration.gen.model.SubmissionSchema;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.LinkedHashSet;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Verwaltungsleistung, die eine Destination anbietet.
 */
@ApiModel(description = "Verwaltungsleistung, die eine Destination anbietet.")
@JsonPropertyOrder({
  DestinationService.JSON_PROPERTY_IDENTIFIER,
  DestinationService.JSON_PROPERTY_REGIONS,
  DestinationService.JSON_PROPERTY_SUBMISSION_SCHEMAS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class DestinationService {
  public static final String JSON_PROPERTY_IDENTIFIER = "identifier";
  private String identifier;

  public static final String JSON_PROPERTY_REGIONS = "regions";
  private Set<String> regions = new LinkedHashSet<>();

  public static final String JSON_PROPERTY_SUBMISSION_SCHEMAS = "submissionSchemas";
  private Set<SubmissionSchema> submissionSchemas = new LinkedHashSet<>();

  public DestinationService() {
  }

  public DestinationService identifier(String identifier) {
    
    this.identifier = identifier;
    return this;
  }

   /**
   * URN einer Leistung. Im Falle einer Leistung aus dem Leistungskatalog sollte hier &#x60;urn:de:fim:leika:leistung:&#x60; vorangestellt werden. 
   * @return identifier
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "URN einer Leistung. Im Falle einer Leistung aus dem Leistungskatalog sollte hier `urn:de:fim:leika:leistung:` vorangestellt werden. ")
  @JsonProperty(JSON_PROPERTY_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getIdentifier() {
    return identifier;
  }


  @JsonProperty(JSON_PROPERTY_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }


  public DestinationService regions(Set<String> regions) {
    
    this.regions = regions;
    return this;
  }

  public DestinationService addRegionsItem(String regionsItem) {
    this.regions.add(regionsItem);
    return this;
  }

   /**
   * Amtliche Regionalschlüssel (ARS) der Regionen in denen die Leistung angeboten wird. Vorangestellt mit &#39;DE&#39;.
   * @return regions
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Amtliche Regionalschlüssel (ARS) der Regionen in denen die Leistung angeboten wird. Vorangestellt mit 'DE'.")
  @JsonProperty(JSON_PROPERTY_REGIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Set<String> getRegions() {
    return regions;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_REGIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRegions(Set<String> regions) {
    this.regions = regions;
  }


  public DestinationService submissionSchemas(Set<SubmissionSchema> submissionSchemas) {
    
    this.submissionSchemas = submissionSchemas;
    return this;
  }

  public DestinationService addSubmissionSchemasItem(SubmissionSchema submissionSchemasItem) {
    this.submissionSchemas.add(submissionSchemasItem);
    return this;
  }

   /**
   * Auflistung aller unterstützten Fachschemata des Zustellpunktes.
   * @return submissionSchemas
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Auflistung aller unterstützten Fachschemata des Zustellpunktes.")
  @JsonProperty(JSON_PROPERTY_SUBMISSION_SCHEMAS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Set<SubmissionSchema> getSubmissionSchemas() {
    return submissionSchemas;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_SUBMISSION_SCHEMAS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSubmissionSchemas(Set<SubmissionSchema> submissionSchemas) {
    this.submissionSchemas = submissionSchemas;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinationService destinationService = (DestinationService) o;
    return Objects.equals(this.identifier, destinationService.identifier) &&
        Objects.equals(this.regions, destinationService.regions) &&
        Objects.equals(this.submissionSchemas, destinationService.submissionSchemas);
  }

  @Override
  public int hashCode() {
    return Objects.hash(identifier, regions, submissionSchemas);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinationService {\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    regions: ").append(toIndentedString(regions)).append("\n");
    sb.append("    submissionSchemas: ").append(toIndentedString(submissionSchemas)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

