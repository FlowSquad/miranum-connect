/*
 * Submission API für Antragsverfahren und Berichtspflichten
 * Die FIT-Connect Submission API ermöglicht das Einreichen von Anträgen und Berichten aus vorgelagerten Systemen (z. B. Onlineantragsdiensten, Fachportalen oder Berichtssystemen) an die Systeme der Verwaltung zur elektronischen Verfahrensbearbeitung (z. B. Fachverfahren, Dokumentenmanagementsysteme oder Prozessplattformen). 
 *
 * The version of the OpenAPI document: 1.1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.miragon.miraum.fitconnect.integration.gen.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.miragon.miraum.fitconnect.integration.gen.model.PrivateDestination;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * DestinationList
 */
@JsonPropertyOrder({
  DestinationList.JSON_PROPERTY_COUNT,
  DestinationList.JSON_PROPERTY_OFFSET,
  DestinationList.JSON_PROPERTY_TOTAL_COUNT,
  DestinationList.JSON_PROPERTY_DESTINATIONS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class DestinationList {
  public static final String JSON_PROPERTY_COUNT = "count";
  private Integer count;

  public static final String JSON_PROPERTY_OFFSET = "offset";
  private Integer offset;

  public static final String JSON_PROPERTY_TOTAL_COUNT = "totalCount";
  private Integer totalCount;

  public static final String JSON_PROPERTY_DESTINATIONS = "destinations";
  private List<PrivateDestination> destinations = new ArrayList<>();

  public DestinationList() {
  }

  public DestinationList count(Integer count) {
    
    this.count = count;
    return this;
  }

   /**
   * Anzahl zurückgegebener Zustellpunkte
   * minimum: 0
   * maximum: 500
   * @return count
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Anzahl zurückgegebener Zustellpunkte")
  @JsonProperty(JSON_PROPERTY_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCount() {
    return count;
  }


  @JsonProperty(JSON_PROPERTY_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCount(Integer count) {
    this.count = count;
  }


  public DestinationList offset(Integer offset) {
    
    this.offset = offset;
    return this;
  }

   /**
   * Startposition der Teilmenge zurückgegebener Zustellpunkte aus der Gesamtergebnismenge.
   * minimum: 0
   * @return offset
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Startposition der Teilmenge zurückgegebener Zustellpunkte aus der Gesamtergebnismenge.")
  @JsonProperty(JSON_PROPERTY_OFFSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getOffset() {
    return offset;
  }


  @JsonProperty(JSON_PROPERTY_OFFSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOffset(Integer offset) {
    this.offset = offset;
  }


  public DestinationList totalCount(Integer totalCount) {
    
    this.totalCount = totalCount;
    return this;
  }

   /**
   * Gesamtanzahl der Zustellpunkte
   * minimum: 0
   * @return totalCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Gesamtanzahl der Zustellpunkte")
  @JsonProperty(JSON_PROPERTY_TOTAL_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTotalCount() {
    return totalCount;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalCount(Integer totalCount) {
    this.totalCount = totalCount;
  }


  public DestinationList destinations(List<PrivateDestination> destinations) {
    
    this.destinations = destinations;
    return this;
  }

  public DestinationList addDestinationsItem(PrivateDestination destinationsItem) {
    this.destinations.add(destinationsItem);
    return this;
  }

   /**
   * Eine Auflistung aller selbst angelegten Zustellpunkte
   * @return destinations
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Eine Auflistung aller selbst angelegten Zustellpunkte")
  @JsonProperty(JSON_PROPERTY_DESTINATIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<PrivateDestination> getDestinations() {
    return destinations;
  }


  @JsonProperty(JSON_PROPERTY_DESTINATIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDestinations(List<PrivateDestination> destinations) {
    this.destinations = destinations;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinationList destinationList = (DestinationList) o;
    return Objects.equals(this.count, destinationList.count) &&
        Objects.equals(this.offset, destinationList.offset) &&
        Objects.equals(this.totalCount, destinationList.totalCount) &&
        Objects.equals(this.destinations, destinationList.destinations);
  }

  @Override
  public int hashCode() {
    return Objects.hash(count, offset, totalCount, destinations);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinationList {\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    totalCount: ").append(toIndentedString(totalCount)).append("\n");
    sb.append("    destinations: ").append(toIndentedString(destinations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

