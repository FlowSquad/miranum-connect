/*
 * Submission API für Antragsverfahren und Berichtspflichten
 * Die FIT-Connect Submission API ermöglicht das Einreichen von Anträgen und Berichten aus vorgelagerten Systemen (z. B. Onlineantragsdiensten, Fachportalen oder Berichtssystemen) an die Systeme der Verwaltung zur elektronischen Verfahrensbearbeitung (z. B. Fachverfahren, Dokumentenmanagementsysteme oder Prozessplattformen). 
 *
 * The version of the OpenAPI document: 1.1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.miragon.miraum.fitconnect.integration.gen.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.miragon.miraum.fitconnect.integration.gen.model.SubmissionForPickup;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.LinkedHashSet;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Beschreibt alle abholbereiten Einreichungen.
 */
@ApiModel(description = "Beschreibt alle abholbereiten Einreichungen.")
@JsonPropertyOrder({
  SubmissionsForPickup.JSON_PROPERTY_COUNT,
  SubmissionsForPickup.JSON_PROPERTY_OFFSET,
  SubmissionsForPickup.JSON_PROPERTY_TOTAL_COUNT,
  SubmissionsForPickup.JSON_PROPERTY_SUBMISSIONS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SubmissionsForPickup {
  public static final String JSON_PROPERTY_COUNT = "count";
  private Integer count;

  public static final String JSON_PROPERTY_OFFSET = "offset";
  private Integer offset;

  public static final String JSON_PROPERTY_TOTAL_COUNT = "totalCount";
  private Integer totalCount;

  public static final String JSON_PROPERTY_SUBMISSIONS = "submissions";
  private Set<SubmissionForPickup> submissions = new LinkedHashSet<>();

  public SubmissionsForPickup() {
  }

  public SubmissionsForPickup count(Integer count) {
    
    this.count = count;
    return this;
  }

   /**
   * Anzahl zurückgegebener Einreichungen
   * minimum: 0
   * maximum: 500
   * @return count
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Anzahl zurückgegebener Einreichungen")
  @JsonProperty(JSON_PROPERTY_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCount() {
    return count;
  }


  @JsonProperty(JSON_PROPERTY_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCount(Integer count) {
    this.count = count;
  }


  public SubmissionsForPickup offset(Integer offset) {
    
    this.offset = offset;
    return this;
  }

   /**
   * Startposition der Teilmenge zurückgegebener Einreichungen aus der Gesamtergebnismenge.
   * minimum: 0
   * @return offset
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Startposition der Teilmenge zurückgegebener Einreichungen aus der Gesamtergebnismenge.")
  @JsonProperty(JSON_PROPERTY_OFFSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getOffset() {
    return offset;
  }


  @JsonProperty(JSON_PROPERTY_OFFSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOffset(Integer offset) {
    this.offset = offset;
  }


  public SubmissionsForPickup totalCount(Integer totalCount) {
    
    this.totalCount = totalCount;
    return this;
  }

   /**
   * Gesamtanzahl der abholbereiten Einreichungen
   * minimum: 0
   * @return totalCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Gesamtanzahl der abholbereiten Einreichungen")
  @JsonProperty(JSON_PROPERTY_TOTAL_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTotalCount() {
    return totalCount;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalCount(Integer totalCount) {
    this.totalCount = totalCount;
  }


  public SubmissionsForPickup submissions(Set<SubmissionForPickup> submissions) {
    
    this.submissions = submissions;
    return this;
  }

  public SubmissionsForPickup addSubmissionsItem(SubmissionForPickup submissionsItem) {
    this.submissions.add(submissionsItem);
    return this;
  }

   /**
   * Get submissions
   * @return submissions
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SUBMISSIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Set<SubmissionForPickup> getSubmissions() {
    return submissions;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_SUBMISSIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSubmissions(Set<SubmissionForPickup> submissions) {
    this.submissions = submissions;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubmissionsForPickup submissionsForPickup = (SubmissionsForPickup) o;
    return Objects.equals(this.count, submissionsForPickup.count) &&
        Objects.equals(this.offset, submissionsForPickup.offset) &&
        Objects.equals(this.totalCount, submissionsForPickup.totalCount) &&
        Objects.equals(this.submissions, submissionsForPickup.submissions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(count, offset, totalCount, submissions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubmissionsForPickup {\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    totalCount: ").append(toIndentedString(totalCount)).append("\n");
    sb.append("    submissions: ").append(toIndentedString(submissions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

