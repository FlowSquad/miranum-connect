/*
 * Submission API für Antragsverfahren und Berichtspflichten
 * Die FIT-Connect Submission API ermöglicht das Einreichen von Anträgen und Berichten aus vorgelagerten Systemen (z. B. Onlineantragsdiensten, Fachportalen oder Berichtssystemen) an die Systeme der Verwaltung zur elektronischen Verfahrensbearbeitung (z. B. Fachverfahren, Dokumentenmanagementsysteme oder Prozessplattformen). 
 *
 * The version of the OpenAPI document: 1.1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.miragon.miraum.fitconnect.integration.gen.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.miragon.miraum.fitconnect.integration.gen.model.Callback;
import io.miragon.miraum.fitconnect.integration.gen.model.ServiceType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Die Repräsentation einer Einreichung (ohne &#x60;encryptedMetadata&#x60; und &#x60;encryptedData&#x60;)
 */
@ApiModel(description = "Die Repräsentation einer Einreichung (ohne `encryptedMetadata` und `encryptedData`)")
@JsonPropertyOrder({
  SubmissionReduced.JSON_PROPERTY_DESTINATION_ID,
  SubmissionReduced.JSON_PROPERTY_SUBMISSION_ID,
  SubmissionReduced.JSON_PROPERTY_CASE_ID,
  SubmissionReduced.JSON_PROPERTY_ATTACHMENTS,
  SubmissionReduced.JSON_PROPERTY_SERVICE_TYPE,
  SubmissionReduced.JSON_PROPERTY_CALLBACK
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SubmissionReduced {
  public static final String JSON_PROPERTY_DESTINATION_ID = "destinationId";
  private UUID destinationId;

  public static final String JSON_PROPERTY_SUBMISSION_ID = "submissionId";
  private UUID submissionId;

  public static final String JSON_PROPERTY_CASE_ID = "caseId";
  private UUID caseId;

  public static final String JSON_PROPERTY_ATTACHMENTS = "attachments";
  private List<UUID> attachments = new ArrayList<>();

  public static final String JSON_PROPERTY_SERVICE_TYPE = "serviceType";
  private ServiceType serviceType;

  public static final String JSON_PROPERTY_CALLBACK = "callback";
  private Callback callback;

  public SubmissionReduced() {
  }

  public SubmissionReduced destinationId(UUID destinationId) {
    
    this.destinationId = destinationId;
    return this;
  }

   /**
   * UUID des Zustellpunktes, an den die Einreichung vermittelt werden soll.
   * @return destinationId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "UUID des Zustellpunktes, an den die Einreichung vermittelt werden soll.")
  @JsonProperty(JSON_PROPERTY_DESTINATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getDestinationId() {
    return destinationId;
  }


  @JsonProperty(JSON_PROPERTY_DESTINATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDestinationId(UUID destinationId) {
    this.destinationId = destinationId;
  }


  public SubmissionReduced submissionId(UUID submissionId) {
    
    this.submissionId = submissionId;
    return this;
  }

   /**
   * Identifikator der Einreichung im Format einer UUID
   * @return submissionId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Identifikator der Einreichung im Format einer UUID")
  @JsonProperty(JSON_PROPERTY_SUBMISSION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getSubmissionId() {
    return submissionId;
  }


  @JsonProperty(JSON_PROPERTY_SUBMISSION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSubmissionId(UUID submissionId) {
    this.submissionId = submissionId;
  }


  public SubmissionReduced caseId(UUID caseId) {
    
    this.caseId = caseId;
    return this;
  }

   /**
   * ID des Vorgangs, zu dem die Einreichung gehört
   * @return caseId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "ID des Vorgangs, zu dem die Einreichung gehört")
  @JsonProperty(JSON_PROPERTY_CASE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getCaseId() {
    return caseId;
  }


  @JsonProperty(JSON_PROPERTY_CASE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCaseId(UUID caseId) {
    this.caseId = caseId;
  }


  public SubmissionReduced attachments(List<UUID> attachments) {
    
    this.attachments = attachments;
    return this;
  }

  public SubmissionReduced addAttachmentsItem(UUID attachmentsItem) {
    this.attachments.add(attachmentsItem);
    return this;
  }

   /**
   * Liste von UUIDs der Anlagen, die bereits hochgeladen wurden
   * @return attachments
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Liste von UUIDs der Anlagen, die bereits hochgeladen wurden")
  @JsonProperty(JSON_PROPERTY_ATTACHMENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<UUID> getAttachments() {
    return attachments;
  }


  @JsonProperty(JSON_PROPERTY_ATTACHMENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAttachments(List<UUID> attachments) {
    this.attachments = attachments;
  }


  public SubmissionReduced serviceType(ServiceType serviceType) {
    
    this.serviceType = serviceType;
    return this;
  }

   /**
   * Get serviceType
   * @return serviceType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SERVICE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ServiceType getServiceType() {
    return serviceType;
  }


  @JsonProperty(JSON_PROPERTY_SERVICE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setServiceType(ServiceType serviceType) {
    this.serviceType = serviceType;
  }


  public SubmissionReduced callback(Callback callback) {
    
    this.callback = callback;
    return this;
  }

   /**
   * Get callback
   * @return callback
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CALLBACK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Callback getCallback() {
    return callback;
  }


  @JsonProperty(JSON_PROPERTY_CALLBACK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCallback(Callback callback) {
    this.callback = callback;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubmissionReduced submissionReduced = (SubmissionReduced) o;
    return Objects.equals(this.destinationId, submissionReduced.destinationId) &&
        Objects.equals(this.submissionId, submissionReduced.submissionId) &&
        Objects.equals(this.caseId, submissionReduced.caseId) &&
        Objects.equals(this.attachments, submissionReduced.attachments) &&
        Objects.equals(this.serviceType, submissionReduced.serviceType) &&
        Objects.equals(this.callback, submissionReduced.callback);
  }

  @Override
  public int hashCode() {
    return Objects.hash(destinationId, submissionId, caseId, attachments, serviceType, callback);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubmissionReduced {\n");
    sb.append("    destinationId: ").append(toIndentedString(destinationId)).append("\n");
    sb.append("    submissionId: ").append(toIndentedString(submissionId)).append("\n");
    sb.append("    caseId: ").append(toIndentedString(caseId)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("    serviceType: ").append(toIndentedString(serviceType)).append("\n");
    sb.append("    callback: ").append(toIndentedString(callback)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

