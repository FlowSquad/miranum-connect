/*
 * Submission API für Antragsverfahren und Berichtspflichten
 * Die FIT-Connect Submission API ermöglicht das Einreichen von Anträgen und Berichten aus vorgelagerten Systemen (z. B. Onlineantragsdiensten, Fachportalen oder Berichtssystemen) an die Systeme der Verwaltung zur elektronischen Verfahrensbearbeitung (z. B. Fachverfahren, Dokumentenmanagementsysteme oder Prozessplattformen). 
 *
 * The version of the OpenAPI document: 1.1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.miragon.miraum.fitconnect.integration.gen.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SubmissionAllOf
 */
@JsonPropertyOrder({
  SubmissionAllOf.JSON_PROPERTY_ENCRYPTED_METADATA
})
@JsonTypeName("Submission_allOf")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SubmissionAllOf {
  public static final String JSON_PROPERTY_ENCRYPTED_METADATA = "encryptedMetadata";
  private String encryptedMetadata;

  public SubmissionAllOf() {
  }

  public SubmissionAllOf encryptedMetadata(String encryptedMetadata) {
    
    this.encryptedMetadata = encryptedMetadata;
    return this;
  }

   /**
   * Der Inhalt ist nach JSON Web Encryption Compact Serialization, RFC 7516, verschlüsselt
   * @return encryptedMetadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Der Inhalt ist nach JSON Web Encryption Compact Serialization, RFC 7516, verschlüsselt")
  @JsonProperty(JSON_PROPERTY_ENCRYPTED_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEncryptedMetadata() {
    return encryptedMetadata;
  }


  @JsonProperty(JSON_PROPERTY_ENCRYPTED_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEncryptedMetadata(String encryptedMetadata) {
    this.encryptedMetadata = encryptedMetadata;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubmissionAllOf submissionAllOf = (SubmissionAllOf) o;
    return Objects.equals(this.encryptedMetadata, submissionAllOf.encryptedMetadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(encryptedMetadata);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubmissionAllOf {\n");
    sb.append("    encryptedMetadata: ").append(toIndentedString(encryptedMetadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

