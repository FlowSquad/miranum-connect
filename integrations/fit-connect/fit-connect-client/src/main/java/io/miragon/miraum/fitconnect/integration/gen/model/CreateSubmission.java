/*
 * Submission API für Antragsverfahren und Berichtspflichten
 * Die FIT-Connect Submission API ermöglicht das Einreichen von Anträgen und Berichten aus vorgelagerten Systemen (z. B. Onlineantragsdiensten, Fachportalen oder Berichtssystemen) an die Systeme der Verwaltung zur elektronischen Verfahrensbearbeitung (z. B. Fachverfahren, Dokumentenmanagementsysteme oder Prozessplattformen). 
 *
 * The version of the OpenAPI document: 1.1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.miragon.miraum.fitconnect.integration.gen.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.miragon.miraum.fitconnect.integration.gen.model.CreateCallback;
import io.miragon.miraum.fitconnect.integration.gen.model.Verwaltungsleistung;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Initiales Objekt zum Erzeugen und ankündigen einer Einreichung
 */
@ApiModel(description = "Initiales Objekt zum Erzeugen und ankündigen einer Einreichung")
@JsonPropertyOrder({
  CreateSubmission.JSON_PROPERTY_DESTINATION_ID,
  CreateSubmission.JSON_PROPERTY_ANNOUNCED_ATTACHMENTS,
  CreateSubmission.JSON_PROPERTY_CASE_ID,
  CreateSubmission.JSON_PROPERTY_SERVICE_TYPE,
  CreateSubmission.JSON_PROPERTY_CALLBACK
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CreateSubmission {
  public static final String JSON_PROPERTY_DESTINATION_ID = "destinationId";
  private UUID destinationId;

  public static final String JSON_PROPERTY_ANNOUNCED_ATTACHMENTS = "announcedAttachments";
  private List<UUID> announcedAttachments = new ArrayList<>();

  public static final String JSON_PROPERTY_CASE_ID = "caseId";
  private UUID caseId;

  public static final String JSON_PROPERTY_SERVICE_TYPE = "serviceType";
  private Verwaltungsleistung serviceType;

  public static final String JSON_PROPERTY_CALLBACK = "callback";
  private CreateCallback callback;

  public CreateSubmission() {
  }

  public CreateSubmission destinationId(UUID destinationId) {
    
    this.destinationId = destinationId;
    return this;
  }

   /**
   * UUID des Zustellpunktes, an den die Einreichung vermittelt werden soll.
   * @return destinationId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "UUID des Zustellpunktes, an den die Einreichung vermittelt werden soll.")
  @JsonProperty(JSON_PROPERTY_DESTINATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getDestinationId() {
    return destinationId;
  }


  @JsonProperty(JSON_PROPERTY_DESTINATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDestinationId(UUID destinationId) {
    this.destinationId = destinationId;
  }


  public CreateSubmission announcedAttachments(List<UUID> announcedAttachments) {
    
    this.announcedAttachments = announcedAttachments;
    return this;
  }

  public CreateSubmission addAnnouncedAttachmentsItem(UUID announcedAttachmentsItem) {
    this.announcedAttachments.add(announcedAttachmentsItem);
    return this;
  }

   /**
   * Eine Liste mit den &#x60;attachmentId&#x60;s die mit der Einreichung hochgeladen werden sollen.
   * @return announcedAttachments
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Eine Liste mit den `attachmentId`s die mit der Einreichung hochgeladen werden sollen.")
  @JsonProperty(JSON_PROPERTY_ANNOUNCED_ATTACHMENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<UUID> getAnnouncedAttachments() {
    return announcedAttachments;
  }


  @JsonProperty(JSON_PROPERTY_ANNOUNCED_ATTACHMENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAnnouncedAttachments(List<UUID> announcedAttachments) {
    this.announcedAttachments = announcedAttachments;
  }


  public CreateSubmission caseId(UUID caseId) {
    
    this.caseId = caseId;
    return this;
  }

   /**
   * Optionale Vorgangsreferenz. Wird keine Vorgangsreferenz angegeben, wird ein neuer Vorgang eröffnet. Wird eine bestehende Vorgangsreferenz angegeben, so wird innerhalb eines bestehenden Vorgangs eine neue Einreichung erstellt (Reply).
   * @return caseId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Optionale Vorgangsreferenz. Wird keine Vorgangsreferenz angegeben, wird ein neuer Vorgang eröffnet. Wird eine bestehende Vorgangsreferenz angegeben, so wird innerhalb eines bestehenden Vorgangs eine neue Einreichung erstellt (Reply).")
  @JsonProperty(JSON_PROPERTY_CASE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getCaseId() {
    return caseId;
  }


  @JsonProperty(JSON_PROPERTY_CASE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCaseId(UUID caseId) {
    this.caseId = caseId;
  }


  public CreateSubmission serviceType(Verwaltungsleistung serviceType) {
    
    this.serviceType = serviceType;
    return this;
  }

   /**
   * Get serviceType
   * @return serviceType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SERVICE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Verwaltungsleistung getServiceType() {
    return serviceType;
  }


  @JsonProperty(JSON_PROPERTY_SERVICE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setServiceType(Verwaltungsleistung serviceType) {
    this.serviceType = serviceType;
  }


  public CreateSubmission callback(CreateCallback callback) {
    
    this.callback = callback;
    return this;
  }

   /**
   * Get callback
   * @return callback
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CALLBACK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreateCallback getCallback() {
    return callback;
  }


  @JsonProperty(JSON_PROPERTY_CALLBACK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCallback(CreateCallback callback) {
    this.callback = callback;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateSubmission createSubmission = (CreateSubmission) o;
    return Objects.equals(this.destinationId, createSubmission.destinationId) &&
        Objects.equals(this.announcedAttachments, createSubmission.announcedAttachments) &&
        Objects.equals(this.caseId, createSubmission.caseId) &&
        Objects.equals(this.serviceType, createSubmission.serviceType) &&
        Objects.equals(this.callback, createSubmission.callback);
  }

  @Override
  public int hashCode() {
    return Objects.hash(destinationId, announcedAttachments, caseId, serviceType, callback);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateSubmission {\n");
    sb.append("    destinationId: ").append(toIndentedString(destinationId)).append("\n");
    sb.append("    announcedAttachments: ").append(toIndentedString(announcedAttachments)).append("\n");
    sb.append("    caseId: ").append(toIndentedString(caseId)).append("\n");
    sb.append("    serviceType: ").append(toIndentedString(serviceType)).append("\n");
    sb.append("    callback: ").append(toIndentedString(callback)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

