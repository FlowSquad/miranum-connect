/**
 * DigiWF API
 * DigiWF - Plattform zur Digitalisierung von Workflows bei der LHM
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: itm.digiwf@muenchen.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { Configuration } from './configuration';
import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { RequestArgs, BaseAPI } from './base';
/**
 *
 * @export
 * @interface AlwMetaDataTO
 */
export interface AlwMetaDataTO {
    /**
     *
     * @type {string}
     * @memberof AlwMetaDataTO
     */
    'name': string;
    /**
     *
     * @type {string}
     * @memberof AlwMetaDataTO
     */
    'type'?: string;
    /**
     *
     * @type {string}
     * @memberof AlwMetaDataTO
     */
    'url'?: string;
    /**
     *
     * @type {string}
     * @memberof AlwMetaDataTO
     */
    'extension'?: string;
    /**
     *
     * @type {string}
     * @memberof AlwMetaDataTO
     */
    'contentSize'?: string;
}
/**
 *
 * @export
 * @interface ButtonTO
 */
export interface ButtonTO {
    /**
     *
     * @type {boolean}
     * @memberof ButtonTO
     */
    'showButton'?: boolean;
    /**
     *
     * @type {string}
     * @memberof ButtonTO
     */
    'buttonText'?: string;
}
/**
 *
 * @export
 * @interface ButtonsTO
 */
export interface ButtonsTO {
    /**
     *
     * @type {ButtonTO}
     * @memberof ButtonsTO
     */
    'complete'?: ButtonTO;
    /**
     *
     * @type {ButtonTO}
     * @memberof ButtonsTO
     */
    'cancel'?: ButtonTO;
    /**
     *
     * @type {ButtonTO}
     * @memberof ButtonsTO
     */
    'statusPdf'?: ButtonTO;
}
/**
 *
 * @export
 * @interface CompleteTO
 */
export interface CompleteTO {
    /**
     *
     * @type {string}
     * @memberof CompleteTO
     */
    'taskId': string;
    /**
     *
     * @type {{ [key: string]: object; }}
     * @memberof CompleteTO
     */
    'variables': {
        [key: string]: object;
    };
}
/**
 *
 * @export
 * @interface ConfigEntryTO
 */
export interface ConfigEntryTO {
    /**
     *
     * @type {string}
     * @memberof ConfigEntryTO
     */
    'key': string;
    /**
     *
     * @type {string}
     * @memberof ConfigEntryTO
     */
    'value': string;
}
/**
 *
 * @export
 * @interface DeploymentDto
 */
export interface DeploymentDto {
    /**
     *
     * @type {string}
     * @memberof DeploymentDto
     */
    'deploymentId'?: string;
    /**
     *
     * @type {string}
     * @memberof DeploymentDto
     */
    'versionId'?: string;
    /**
     *
     * @type {string}
     * @memberof DeploymentDto
     */
    'target'?: string;
    /**
     *
     * @type {string}
     * @memberof DeploymentDto
     */
    'file'?: string;
    /**
     *
     * @type {string}
     * @memberof DeploymentDto
     */
    'artifactType'?: string;
}
/**
 *
 * @export
 * @interface DeploymentStatusDto
 */
export interface DeploymentStatusDto {
    /**
     *
     * @type {boolean}
     * @memberof DeploymentStatusDto
     */
    'success'?: boolean;
    /**
     *
     * @type {string}
     * @memberof DeploymentStatusDto
     */
    'message'?: string;
}
/**
 *
 * @export
 * @interface FilterTO
 */
export interface FilterTO {
    /**
     *
     * @type {string}
     * @memberof FilterTO
     */
    'id'?: string;
    /**
     *
     * @type {string}
     * @memberof FilterTO
     */
    'filterString'?: string;
    /**
     *
     * @type {string}
     * @memberof FilterTO
     */
    'pageId'?: string;
}
/**
 *
 * @export
 * @interface FollowUpTO
 */
export interface FollowUpTO {
    /**
     *
     * @type {string}
     * @memberof FollowUpTO
     */
    'taskId': string;
    /**
     *
     * @type {string}
     * @memberof FollowUpTO
     */
    'followUpDate'?: string;
}
/**
 *
 * @export
 * @interface FormFieldTO
 */
export interface FormFieldTO {
    /**
     *
     * @type {string}
     * @memberof FormFieldTO
     */
    'type': string;
    /**
     *
     * @type {string}
     * @memberof FormFieldTO
     */
    'key': string;
    /**
     *
     * @type {string}
     * @memberof FormFieldTO
     */
    'defaultValue'?: string;
    /**
     *
     * @type {string}
     * @memberof FormFieldTO
     */
    'defaultValueField'?: string;
    /**
     *
     * @type {string}
     * @memberof FormFieldTO
     */
    'label'?: string;
    /**
     *
     * @type {string}
     * @memberof FormFieldTO
     */
    'prependIcon'?: string;
    /**
     *
     * @type {string}
     * @memberof FormFieldTO
     */
    'tooltip'?: string;
    /**
     *
     * @type {string}
     * @memberof FormFieldTO
     */
    'ext'?: string;
    /**
     *
     * @type {boolean}
     * @memberof FormFieldTO
     */
    'multiple'?: boolean;
    /**
     *
     * @type {string}
     * @memberof FormFieldTO
     */
    'description'?: string;
    /**
     *
     * @type {string}
     * @memberof FormFieldTO
     */
    'ldapOus'?: string;
    /**
     *
     * @type {string}
     * @memberof FormFieldTO
     */
    'imageHeight'?: string;
    /**
     *
     * @type {string}
     * @memberof FormFieldTO
     */
    'imageWidth'?: string;
    /**
     *
     * @type {boolean}
     * @memberof FormFieldTO
     */
    'readonly'?: boolean;
    /**
     *
     * @type {number}
     * @memberof FormFieldTO
     */
    'rows'?: number;
    /**
     *
     * @type {number}
     * @memberof FormFieldTO
     */
    'col'?: number;
    /**
     *
     * @type {Array<ItemTO>}
     * @memberof FormFieldTO
     */
    'items'?: Array<ItemTO>;
    /**
     *
     * @type {Array<RuleTO>}
     * @memberof FormFieldTO
     */
    'rules'?: Array<RuleTO>;
    /**
     *
     * @type {string}
     * @memberof FormFieldTO
     */
    'itemText'?: string;
    /**
     *
     * @type {string}
     * @memberof FormFieldTO
     */
    'itemValue'?: string;
    /**
     *
     * @type {boolean}
     * @memberof FormFieldTO
     */
    'returnObject'?: boolean;
}
/**
 *
 * @export
 * @interface FormTO
 */
export interface FormTO {
    /**
     *
     * @type {string}
     * @memberof FormTO
     */
    'key': string;
    /**
     *
     * @type {string}
     * @memberof FormTO
     */
    'description'?: string;
    /**
     *
     * @type {string}
     * @memberof FormTO
     */
    'authorizedGroups'?: string;
    /**
     *
     * @type {ButtonsTO}
     * @memberof FormTO
     */
    'buttons'?: ButtonsTO;
    /**
     *
     * @type {Array<GroupTO>}
     * @memberof FormTO
     */
    'groups'?: Array<GroupTO>;
}
/**
 *
 * @export
 * @interface GetAlwMetadataTO
 */
export interface GetAlwMetadataTO {
    /**
     *
     * @type {string}
     * @memberof GetAlwMetadataTO
     */
    'url': string;
}
/**
 *
 * @export
 * @interface GetMetadataTO
 */
export interface GetMetadataTO {
    /**
     *
     * @type {string}
     * @memberof GetMetadataTO
     */
    'url': string;
}
/**
 *
 * @export
 * @interface GroupTO
 */
export interface GroupTO {
    /**
     *
     * @type {string}
     * @memberof GroupTO
     */
    'label'?: string;
    /**
     *
     * @type {Array<FormFieldTO>}
     * @memberof GroupTO
     */
    'schema'?: Array<FormFieldTO>;
}
/**
 *
 * @export
 * @interface HistoryTask
 */
export interface HistoryTask {
    /**
     *
     * @type {string}
     * @memberof HistoryTask
     */
    'id'?: string;
    /**
     *
     * @type {string}
     * @memberof HistoryTask
     */
    'name'?: string;
    /**
     *
     * @type {string}
     * @memberof HistoryTask
     */
    'endTime'?: string;
}
/**
 *
 * @export
 * @interface HumanTaskDetailTO
 */
export interface HumanTaskDetailTO {
    /**
     *
     * @type {string}
     * @memberof HumanTaskDetailTO
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof HumanTaskDetailTO
     */
    'name': string;
    /**
     *
     * @type {string}
     * @memberof HumanTaskDetailTO
     */
    'description'?: string;
    /**
     *
     * @type {string}
     * @memberof HumanTaskDetailTO
     */
    'processName': string;
    /**
     *
     * @type {string}
     * @memberof HumanTaskDetailTO
     */
    'processInstanceId': string;
    /**
     *
     * @type {string}
     * @memberof HumanTaskDetailTO
     */
    'assignee'?: string;
    /**
     *
     * @type {string}
     * @memberof HumanTaskDetailTO
     */
    'assigneeFormatted'?: string;
    /**
     *
     * @type {string}
     * @memberof HumanTaskDetailTO
     */
    'followUpDate'?: string;
    /**
     *
     * @type {string}
     * @memberof HumanTaskDetailTO
     */
    'creationTime': string;
    /**
     *
     * @type {{ [key: string]: object; }}
     * @memberof HumanTaskDetailTO
     */
    'variables'?: {
        [key: string]: object;
    };
    /**
     *
     * @type {FormTO}
     * @memberof HumanTaskDetailTO
     */
    'form'?: FormTO;
    /**
     *
     * @type {{ [key: string]: object; }}
     * @memberof HumanTaskDetailTO
     */
    'jsonSchema'?: {
        [key: string]: object;
    };
    /**
     *
     * @type {boolean}
     * @memberof HumanTaskDetailTO
     */
    'statusDocument'?: boolean;
}
/**
 *
 * @export
 * @interface HumanTaskTO
 */
export interface HumanTaskTO {
    /**
     *
     * @type {string}
     * @memberof HumanTaskTO
     */
    'id'?: string;
    /**
     *
     * @type {string}
     * @memberof HumanTaskTO
     */
    'name'?: string;
    /**
     *
     * @type {string}
     * @memberof HumanTaskTO
     */
    'description'?: string;
    /**
     *
     * @type {string}
     * @memberof HumanTaskTO
     */
    'processName'?: string;
    /**
     *
     * @type {string}
     * @memberof HumanTaskTO
     */
    'assignee'?: string;
    /**
     *
     * @type {string}
     * @memberof HumanTaskTO
     */
    'assigneeFormatted'?: string;
    /**
     *
     * @type {string}
     * @memberof HumanTaskTO
     */
    'followUpDate'?: string;
    /**
     *
     * @type {string}
     * @memberof HumanTaskTO
     */
    'creationTime'?: string;
}
/**
 *
 * @export
 * @interface InfoTO
 */
export interface InfoTO {
    /**
     *
     * @type {string}
     * @memberof InfoTO
     */
    'maintenanceInfo1'?: string;
    /**
     *
     * @type {string}
     * @memberof InfoTO
     */
    'maintenanceInfo2'?: string;
    /**
     *
     * @type {string}
     * @memberof InfoTO
     */
    'environment'?: string;
}
/**
 *
 * @export
 * @interface ItemTO
 */
export interface ItemTO {
    /**
     *
     * @type {string}
     * @memberof ItemTO
     */
    'name'?: string;
    /**
     *
     * @type {string}
     * @memberof ItemTO
     */
    'value'?: string;
}
/**
 *
 * @export
 * @interface JsonSchemaTO
 */
export interface JsonSchemaTO {
    /**
     *
     * @type {string}
     * @memberof JsonSchemaTO
     */
    'key': string;
    /**
     *
     * @type {{ [key: string]: object; }}
     * @memberof JsonSchemaTO
     */
    'schema': {
        [key: string]: object;
    };
}
/**
 *
 * @export
 * @interface MetadataTO
 */
export interface MetadataTO {
    /**
     *
     * @type {string}
     * @memberof MetadataTO
     */
    'name': string;
    /**
     *
     * @type {string}
     * @memberof MetadataTO
     */
    'type'?: string;
    /**
     *
     * @type {string}
     * @memberof MetadataTO
     */
    'url'?: string;
}
/**
 *
 * @export
 * @interface PageHumanTaskTO
 */
export interface PageHumanTaskTO {
    /**
     *
     * @type {number}
     * @memberof PageHumanTaskTO
     */
    'totalPages'?: number;
    /**
     *
     * @type {number}
     * @memberof PageHumanTaskTO
     */
    'totalElements'?: number;
    /**
     *
     * @type {number}
     * @memberof PageHumanTaskTO
     */
    'numberOfElements'?: number;
    /**
     *
     * @type {boolean}
     * @memberof PageHumanTaskTO
     */
    'first'?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof PageHumanTaskTO
     */
    'last'?: boolean;
    /**
     *
     * @type {PageableObject}
     * @memberof PageHumanTaskTO
     */
    'pageable'?: PageableObject;
    /**
     *
     * @type {number}
     * @memberof PageHumanTaskTO
     */
    'size'?: number;
    /**
     *
     * @type {Array<HumanTaskTO>}
     * @memberof PageHumanTaskTO
     */
    'content'?: Array<HumanTaskTO>;
    /**
     *
     * @type {number}
     * @memberof PageHumanTaskTO
     */
    'number'?: number;
    /**
     *
     * @type {Sort}
     * @memberof PageHumanTaskTO
     */
    'sort'?: Sort;
    /**
     *
     * @type {boolean}
     * @memberof PageHumanTaskTO
     */
    'empty'?: boolean;
}
/**
 *
 * @export
 * @interface PageableObject
 */
export interface PageableObject {
    /**
     *
     * @type {number}
     * @memberof PageableObject
     */
    'pageNumber'?: number;
    /**
     *
     * @type {number}
     * @memberof PageableObject
     */
    'pageSize'?: number;
    /**
     *
     * @type {boolean}
     * @memberof PageableObject
     */
    'paged'?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof PageableObject
     */
    'unpaged'?: boolean;
    /**
     *
     * @type {number}
     * @memberof PageableObject
     */
    'offset'?: number;
    /**
     *
     * @type {Sort}
     * @memberof PageableObject
     */
    'sort'?: Sort;
}
/**
 *
 * @export
 * @interface ProcessConfigTO
 */
export interface ProcessConfigTO {
    /**
     *
     * @type {string}
     * @memberof ProcessConfigTO
     */
    'key': string;
    /**
     *
     * @type {string}
     * @memberof ProcessConfigTO
     */
    'statusDokument'?: string;
    /**
     *
     * @type {Array<StatusConfigTO>}
     * @memberof ProcessConfigTO
     */
    'statusConfig'?: Array<StatusConfigTO>;
    /**
     *
     * @type {Array<ConfigEntryTO>}
     * @memberof ProcessConfigTO
     */
    'configs'?: Array<ConfigEntryTO>;
}
/**
 *
 * @export
 * @interface RuleTO
 */
export interface RuleTO {
    /**
     *
     * @type {string}
     * @memberof RuleTO
     */
    'type'?: string;
    /**
     *
     * @type {string}
     * @memberof RuleTO
     */
    'value'?: string;
    /**
     *
     * @type {string}
     * @memberof RuleTO
     */
    'target'?: string;
}
/**
 *
 * @export
 * @interface SaveFilterTO
 */
export interface SaveFilterTO {
    /**
     *
     * @type {string}
     * @memberof SaveFilterTO
     */
    'filterString': string;
    /**
     *
     * @type {string}
     * @memberof SaveFilterTO
     */
    'pageId': string;
}
/**
 *
 * @export
 * @interface SaveTO
 */
export interface SaveTO {
    /**
     *
     * @type {string}
     * @memberof SaveTO
     */
    'taskId': string;
    /**
     *
     * @type {{ [key: string]: object; }}
     * @memberof SaveTO
     */
    'variables'?: {
        [key: string]: object;
    };
}
/**
 *
 * @export
 * @interface SearchUserTO
 */
export interface SearchUserTO {
    /**
     *
     * @type {string}
     * @memberof SearchUserTO
     */
    'searchString'?: string;
    /**
     *
     * @type {string}
     * @memberof SearchUserTO
     */
    'ous'?: string;
}
/**
 *
 * @export
 * @interface SendMessageTO
 */
export interface SendMessageTO {
    /**
     *
     * @type {string}
     * @memberof SendMessageTO
     */
    'instanceId'?: string;
    /**
     *
     * @type {string}
     * @memberof SendMessageTO
     */
    'message'?: string;
}
/**
 *
 * @export
 * @interface ServiceDefinitionDetailTO
 */
export interface ServiceDefinitionDetailTO {
    /**
     *
     * @type {FormTO}
     * @memberof ServiceDefinitionDetailTO
     */
    'startForm'?: FormTO;
    /**
     *
     * @type {{ [key: string]: object; }}
     * @memberof ServiceDefinitionDetailTO
     */
    'jsonSchema'?: {
        [key: string]: object;
    };
    /**
     *
     * @type {string}
     * @memberof ServiceDefinitionDetailTO
     */
    'key': string;
    /**
     *
     * @type {string}
     * @memberof ServiceDefinitionDetailTO
     */
    'name': string;
    /**
     *
     * @type {string}
     * @memberof ServiceDefinitionDetailTO
     */
    'description'?: string;
    /**
     *
     * @type {string}
     * @memberof ServiceDefinitionDetailTO
     */
    'versionTag'?: string;
}
/**
 *
 * @export
 * @interface ServiceDefinitionTO
 */
export interface ServiceDefinitionTO {
    /**
     *
     * @type {string}
     * @memberof ServiceDefinitionTO
     */
    'key'?: string;
    /**
     *
     * @type {string}
     * @memberof ServiceDefinitionTO
     */
    'name'?: string;
    /**
     *
     * @type {string}
     * @memberof ServiceDefinitionTO
     */
    'description'?: string;
    /**
     *
     * @type {string}
     * @memberof ServiceDefinitionTO
     */
    'versionTag'?: string;
}
/**
 *
 * @export
 * @interface ServiceInstanceDetailTO
 */
export interface ServiceInstanceDetailTO {
    /**
     *
     * @type {string}
     * @memberof ServiceInstanceDetailTO
     */
    'id'?: string;
    /**
     *
     * @type {string}
     * @memberof ServiceInstanceDetailTO
     */
    'definitionName'?: string;
    /**
     *
     * @type {string}
     * @memberof ServiceInstanceDetailTO
     */
    'startTime'?: string;
    /**
     *
     * @type {string}
     * @memberof ServiceInstanceDetailTO
     */
    'endTime'?: string;
    /**
     *
     * @type {string}
     * @memberof ServiceInstanceDetailTO
     */
    'status'?: string;
    /**
     *
     * @type {string}
     * @memberof ServiceInstanceDetailTO
     */
    'statusKey'?: string;
    /**
     *
     * @type {string}
     * @memberof ServiceInstanceDetailTO
     */
    'description'?: string;
    /**
     *
     * @type {ProcessConfigTO}
     * @memberof ServiceInstanceDetailTO
     */
    'processConfig'?: ProcessConfigTO;
    /**
     *
     * @type {Array<HistoryTask>}
     * @memberof ServiceInstanceDetailTO
     */
    'historyTasks'?: Array<HistoryTask>;
    /**
     *
     * @type {{ [key: string]: object; }}
     * @memberof ServiceInstanceDetailTO
     */
    'data'?: {
        [key: string]: object;
    };
    /**
     *
     * @type {{ [key: string]: object; }}
     * @memberof ServiceInstanceDetailTO
     */
    'jsonSchema'?: {
        [key: string]: object;
    };
}
/**
 *
 * @export
 * @interface ServiceInstanceTO
 */
export interface ServiceInstanceTO {
    /**
     *
     * @type {string}
     * @memberof ServiceInstanceTO
     */
    'id'?: string;
    /**
     *
     * @type {string}
     * @memberof ServiceInstanceTO
     */
    'definitionName'?: string;
    /**
     *
     * @type {string}
     * @memberof ServiceInstanceTO
     */
    'startTime'?: string;
    /**
     *
     * @type {string}
     * @memberof ServiceInstanceTO
     */
    'endTime'?: string;
    /**
     *
     * @type {string}
     * @memberof ServiceInstanceTO
     */
    'status'?: string;
    /**
     *
     * @type {string}
     * @memberof ServiceInstanceTO
     */
    'description'?: string;
}
/**
 *
 * @export
 * @interface Sort
 */
export interface Sort {
    /**
     *
     * @type {boolean}
     * @memberof Sort
     */
    'sorted'?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof Sort
     */
    'unsorted'?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof Sort
     */
    'empty'?: boolean;
}
/**
 *
 * @export
 * @interface StartInstanceTO
 */
export interface StartInstanceTO {
    /**
     *
     * @type {string}
     * @memberof StartInstanceTO
     */
    'key'?: string;
    /**
     *
     * @type {{ [key: string]: object; }}
     * @memberof StartInstanceTO
     */
    'variables'?: {
        [key: string]: object;
    };
}
/**
 *
 * @export
 * @interface StatusConfigTO
 */
export interface StatusConfigTO {
    /**
     *
     * @type {string}
     * @memberof StatusConfigTO
     */
    'key': string;
    /**
     *
     * @type {string}
     * @memberof StatusConfigTO
     */
    'label': string;
    /**
     *
     * @type {number}
     * @memberof StatusConfigTO
     */
    'position': number;
}
/**
 *
 * @export
 * @interface StatusDokumentTO
 */
export interface StatusDokumentTO {
    /**
     *
     * @type {string}
     * @memberof StatusDokumentTO
     */
    'name'?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof StatusDokumentTO
     */
    'data'?: Array<string>;
}
/**
 *
 * @export
 * @interface UserTO
 */
export interface UserTO {
    /**
     *
     * @type {string}
     * @memberof UserTO
     */
    'lhmObjectId'?: string;
    /**
     *
     * @type {string}
     * @memberof UserTO
     */
    'username'?: string;
    /**
     *
     * @type {string}
     * @memberof UserTO
     */
    'forename'?: string;
    /**
     *
     * @type {string}
     * @memberof UserTO
     */
    'surname'?: string;
    /**
     *
     * @type {string}
     * @memberof UserTO
     */
    'ou'?: string;
    /**
     *
     * @type {string}
     * @memberof UserTO
     */
    'department'?: string;
    /**
     *
     * @type {string}
     * @memberof UserTO
     */
    'email'?: string;
}
/**
 * AlwDmsRestControllerApi - axios parameter creator
 * @export
 */
export declare const AlwDmsRestControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {GetAlwMetadataTO} getAlwMetadataTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getMetadata: (getAlwMetadataTO: GetAlwMetadataTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * AlwDmsRestControllerApi - functional programming interface
 * @export
 */
export declare const AlwDmsRestControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {GetAlwMetadataTO} getAlwMetadataTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getMetadata(getAlwMetadataTO: GetAlwMetadataTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AlwMetaDataTO>>;
};
/**
 * AlwDmsRestControllerApi - factory interface
 * @export
 */
export declare const AlwDmsRestControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {GetAlwMetadataTO} getAlwMetadataTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getMetadata(getAlwMetadataTO: GetAlwMetadataTO, options?: any): AxiosPromise<AlwMetaDataTO>;
};
/**
 * Request parameters for getMetadata operation in AlwDmsRestControllerApi.
 * @export
 * @interface AlwDmsRestControllerApiGetMetadataRequest
 */
export interface AlwDmsRestControllerApiGetMetadataRequest {
    /**
     *
     * @type {GetAlwMetadataTO}
     * @memberof AlwDmsRestControllerApiGetMetadata
     */
    readonly getAlwMetadataTO: GetAlwMetadataTO;
}
/**
 * AlwDmsRestControllerApi - object-oriented interface
 * @export
 * @class AlwDmsRestControllerApi
 * @extends {BaseAPI}
 */
export declare class AlwDmsRestControllerApi extends BaseAPI {
    /**
     *
     * @param {AlwDmsRestControllerApiGetMetadataRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AlwDmsRestControllerApi
     */
    getMetadata(requestParameters: AlwDmsRestControllerApiGetMetadataRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<AlwMetaDataTO, any>>;
}
/**
 * DeploymentControllerApi - axios parameter creator
 * @export
 */
export declare const DeploymentControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {DeploymentDto} deploymentDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deployArtifacts: (deploymentDto: DeploymentDto, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * DeploymentControllerApi - functional programming interface
 * @export
 */
export declare const DeploymentControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {DeploymentDto} deploymentDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deployArtifacts(deploymentDto: DeploymentDto, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DeploymentStatusDto>>;
};
/**
 * DeploymentControllerApi - factory interface
 * @export
 */
export declare const DeploymentControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {DeploymentDto} deploymentDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deployArtifacts(deploymentDto: DeploymentDto, options?: any): AxiosPromise<DeploymentStatusDto>;
};
/**
 * Request parameters for deployArtifacts operation in DeploymentControllerApi.
 * @export
 * @interface DeploymentControllerApiDeployArtifactsRequest
 */
export interface DeploymentControllerApiDeployArtifactsRequest {
    /**
     *
     * @type {DeploymentDto}
     * @memberof DeploymentControllerApiDeployArtifacts
     */
    readonly deploymentDto: DeploymentDto;
}
/**
 * DeploymentControllerApi - object-oriented interface
 * @export
 * @class DeploymentControllerApi
 * @extends {BaseAPI}
 */
export declare class DeploymentControllerApi extends BaseAPI {
    /**
     *
     * @param {DeploymentControllerApiDeployArtifactsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DeploymentControllerApi
     */
    deployArtifacts(requestParameters: DeploymentControllerApiDeployArtifactsRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<DeploymentStatusDto, any>>;
}
/**
 * DmsRestControllerApi - axios parameter creator
 * @export
 */
export declare const DmsRestControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {GetMetadataTO} getMetadataTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getMetaData: (getMetadataTO: GetMetadataTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * DmsRestControllerApi - functional programming interface
 * @export
 */
export declare const DmsRestControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {GetMetadataTO} getMetadataTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getMetaData(getMetadataTO: GetMetadataTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MetadataTO>>;
};
/**
 * DmsRestControllerApi - factory interface
 * @export
 */
export declare const DmsRestControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {GetMetadataTO} getMetadataTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getMetaData(getMetadataTO: GetMetadataTO, options?: any): AxiosPromise<MetadataTO>;
};
/**
 * Request parameters for getMetaData operation in DmsRestControllerApi.
 * @export
 * @interface DmsRestControllerApiGetMetaDataRequest
 */
export interface DmsRestControllerApiGetMetaDataRequest {
    /**
     *
     * @type {GetMetadataTO}
     * @memberof DmsRestControllerApiGetMetaData
     */
    readonly getMetadataTO: GetMetadataTO;
}
/**
 * DmsRestControllerApi - object-oriented interface
 * @export
 * @class DmsRestControllerApi
 * @extends {BaseAPI}
 */
export declare class DmsRestControllerApi extends BaseAPI {
    /**
     *
     * @param {DmsRestControllerApiGetMetaDataRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DmsRestControllerApi
     */
    getMetaData(requestParameters: DmsRestControllerApiGetMetaDataRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<MetadataTO, any>>;
}
/**
 * DocumentRestControllerApi - axios parameter creator
 * @export
 */
export declare const DocumentRestControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStatusDokumentForTask: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * DocumentRestControllerApi - functional programming interface
 * @export
 */
export declare const DocumentRestControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStatusDokumentForTask(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<StatusDokumentTO>>;
};
/**
 * DocumentRestControllerApi - factory interface
 * @export
 */
export declare const DocumentRestControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStatusDokumentForTask(id: string, options?: any): AxiosPromise<StatusDokumentTO>;
};
/**
 * Request parameters for getStatusDokumentForTask operation in DocumentRestControllerApi.
 * @export
 * @interface DocumentRestControllerApiGetStatusDokumentForTaskRequest
 */
export interface DocumentRestControllerApiGetStatusDokumentForTaskRequest {
    /**
     *
     * @type {string}
     * @memberof DocumentRestControllerApiGetStatusDokumentForTask
     */
    readonly id: string;
}
/**
 * DocumentRestControllerApi - object-oriented interface
 * @export
 * @class DocumentRestControllerApi
 * @extends {BaseAPI}
 */
export declare class DocumentRestControllerApi extends BaseAPI {
    /**
     *
     * @param {DocumentRestControllerApiGetStatusDokumentForTaskRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DocumentRestControllerApi
     */
    getStatusDokumentForTask(requestParameters: DocumentRestControllerApiGetStatusDokumentForTaskRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<StatusDokumentTO, any>>;
}
/**
 * FilterRestControllerApi - axios parameter creator
 * @export
 */
export declare const FilterRestControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    _delete: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getFilters: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {SaveFilterTO} saveFilterTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    saveFilter: (saveFilterTO: SaveFilterTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * FilterRestControllerApi - functional programming interface
 * @export
 */
export declare const FilterRestControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    _delete(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getFilters(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<FilterTO>>>;
    /**
     *
     * @param {SaveFilterTO} saveFilterTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    saveFilter(saveFilterTO: SaveFilterTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FilterTO>>;
};
/**
 * FilterRestControllerApi - factory interface
 * @export
 */
export declare const FilterRestControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    _delete(id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getFilters(options?: any): AxiosPromise<Array<FilterTO>>;
    /**
     *
     * @param {SaveFilterTO} saveFilterTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    saveFilter(saveFilterTO: SaveFilterTO, options?: any): AxiosPromise<FilterTO>;
};
/**
 * Request parameters for _delete operation in FilterRestControllerApi.
 * @export
 * @interface FilterRestControllerApiDeleteRequest
 */
export interface FilterRestControllerApiDeleteRequest {
    /**
     *
     * @type {string}
     * @memberof FilterRestControllerApiDelete
     */
    readonly id: string;
}
/**
 * Request parameters for saveFilter operation in FilterRestControllerApi.
 * @export
 * @interface FilterRestControllerApiSaveFilterRequest
 */
export interface FilterRestControllerApiSaveFilterRequest {
    /**
     *
     * @type {SaveFilterTO}
     * @memberof FilterRestControllerApiSaveFilter
     */
    readonly saveFilterTO: SaveFilterTO;
}
/**
 * FilterRestControllerApi - object-oriented interface
 * @export
 * @class FilterRestControllerApi
 * @extends {BaseAPI}
 */
export declare class FilterRestControllerApi extends BaseAPI {
    /**
     *
     * @param {FilterRestControllerApiDeleteRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FilterRestControllerApi
     */
    _delete(requestParameters: FilterRestControllerApiDeleteRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FilterRestControllerApi
     */
    getFilters(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<FilterTO[], any>>;
    /**
     *
     * @param {FilterRestControllerApiSaveFilterRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FilterRestControllerApi
     */
    saveFilter(requestParameters: FilterRestControllerApiSaveFilterRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<FilterTO, any>>;
}
/**
 * FormRestControllerApi - axios parameter creator
 * @export
 */
export declare const FormRestControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {FormTO} formTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createForm: (formTO: FormTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} key
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getForm: (key: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getForms: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} key
     * @param {FormTO} formTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateForm: (key: string, formTO: FormTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * FormRestControllerApi - functional programming interface
 * @export
 */
export declare const FormRestControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {FormTO} formTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createForm(formTO: FormTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FormTO>>;
    /**
     *
     * @param {string} key
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getForm(key: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FormTO>>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getForms(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<FormTO>>>;
    /**
     *
     * @param {string} key
     * @param {FormTO} formTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateForm(key: string, formTO: FormTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FormTO>>;
};
/**
 * FormRestControllerApi - factory interface
 * @export
 */
export declare const FormRestControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {FormTO} formTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createForm(formTO: FormTO, options?: any): AxiosPromise<FormTO>;
    /**
     *
     * @param {string} key
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getForm(key: string, options?: any): AxiosPromise<FormTO>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getForms(options?: any): AxiosPromise<Array<FormTO>>;
    /**
     *
     * @param {string} key
     * @param {FormTO} formTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateForm(key: string, formTO: FormTO, options?: any): AxiosPromise<FormTO>;
};
/**
 * Request parameters for createForm operation in FormRestControllerApi.
 * @export
 * @interface FormRestControllerApiCreateFormRequest
 */
export interface FormRestControllerApiCreateFormRequest {
    /**
     *
     * @type {FormTO}
     * @memberof FormRestControllerApiCreateForm
     */
    readonly formTO: FormTO;
}
/**
 * Request parameters for getForm operation in FormRestControllerApi.
 * @export
 * @interface FormRestControllerApiGetFormRequest
 */
export interface FormRestControllerApiGetFormRequest {
    /**
     *
     * @type {string}
     * @memberof FormRestControllerApiGetForm
     */
    readonly key: string;
}
/**
 * Request parameters for updateForm operation in FormRestControllerApi.
 * @export
 * @interface FormRestControllerApiUpdateFormRequest
 */
export interface FormRestControllerApiUpdateFormRequest {
    /**
     *
     * @type {string}
     * @memberof FormRestControllerApiUpdateForm
     */
    readonly key: string;
    /**
     *
     * @type {FormTO}
     * @memberof FormRestControllerApiUpdateForm
     */
    readonly formTO: FormTO;
}
/**
 * FormRestControllerApi - object-oriented interface
 * @export
 * @class FormRestControllerApi
 * @extends {BaseAPI}
 */
export declare class FormRestControllerApi extends BaseAPI {
    /**
     *
     * @param {FormRestControllerApiCreateFormRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FormRestControllerApi
     */
    createForm(requestParameters: FormRestControllerApiCreateFormRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<FormTO, any>>;
    /**
     *
     * @param {FormRestControllerApiGetFormRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FormRestControllerApi
     */
    getForm(requestParameters: FormRestControllerApiGetFormRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<FormTO, any>>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FormRestControllerApi
     */
    getForms(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<FormTO[], any>>;
    /**
     *
     * @param {FormRestControllerApiUpdateFormRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FormRestControllerApi
     */
    updateForm(requestParameters: FormRestControllerApiUpdateFormRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<FormTO, any>>;
}
/**
 * HumanTaskFileRestControllerApi - axios parameter creator
 * @export
 */
export declare const HumanTaskFileRestControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} taskId
     * @param {string} filePath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getFileNames: (taskId: string, filePath: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} taskId
     * @param {string} filename
     * @param {string} filePath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPresignedUrlForFileDeletion: (taskId: string, filename: string, filePath: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} taskId
     * @param {string} fileName
     * @param {string} filePath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPresignedUrlForFileDownload: (taskId: string, fileName: string, filePath: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} taskId
     * @param {string} filename
     * @param {string} filePath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPresignedUrlForFileUpload: (taskId: string, filename: string, filePath: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * HumanTaskFileRestControllerApi - functional programming interface
 * @export
 */
export declare const HumanTaskFileRestControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} taskId
     * @param {string} filePath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getFileNames(taskId: string, filePath: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<string>>>;
    /**
     *
     * @param {string} taskId
     * @param {string} filename
     * @param {string} filePath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPresignedUrlForFileDeletion(taskId: string, filename: string, filePath: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
    /**
     *
     * @param {string} taskId
     * @param {string} fileName
     * @param {string} filePath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPresignedUrlForFileDownload(taskId: string, fileName: string, filePath: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
    /**
     *
     * @param {string} taskId
     * @param {string} filename
     * @param {string} filePath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPresignedUrlForFileUpload(taskId: string, filename: string, filePath: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
};
/**
 * HumanTaskFileRestControllerApi - factory interface
 * @export
 */
export declare const HumanTaskFileRestControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} taskId
     * @param {string} filePath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getFileNames(taskId: string, filePath: string, options?: any): AxiosPromise<Array<string>>;
    /**
     *
     * @param {string} taskId
     * @param {string} filename
     * @param {string} filePath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPresignedUrlForFileDeletion(taskId: string, filename: string, filePath: string, options?: any): AxiosPromise<string>;
    /**
     *
     * @param {string} taskId
     * @param {string} fileName
     * @param {string} filePath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPresignedUrlForFileDownload(taskId: string, fileName: string, filePath: string, options?: any): AxiosPromise<string>;
    /**
     *
     * @param {string} taskId
     * @param {string} filename
     * @param {string} filePath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPresignedUrlForFileUpload(taskId: string, filename: string, filePath: string, options?: any): AxiosPromise<string>;
};
/**
 * Request parameters for getFileNames operation in HumanTaskFileRestControllerApi.
 * @export
 * @interface HumanTaskFileRestControllerApiGetFileNamesRequest
 */
export interface HumanTaskFileRestControllerApiGetFileNamesRequest {
    /**
     *
     * @type {string}
     * @memberof HumanTaskFileRestControllerApiGetFileNames
     */
    readonly taskId: string;
    /**
     *
     * @type {string}
     * @memberof HumanTaskFileRestControllerApiGetFileNames
     */
    readonly filePath: string;
}
/**
 * Request parameters for getPresignedUrlForFileDeletion operation in HumanTaskFileRestControllerApi.
 * @export
 * @interface HumanTaskFileRestControllerApiGetPresignedUrlForFileDeletionRequest
 */
export interface HumanTaskFileRestControllerApiGetPresignedUrlForFileDeletionRequest {
    /**
     *
     * @type {string}
     * @memberof HumanTaskFileRestControllerApiGetPresignedUrlForFileDeletion
     */
    readonly taskId: string;
    /**
     *
     * @type {string}
     * @memberof HumanTaskFileRestControllerApiGetPresignedUrlForFileDeletion
     */
    readonly filename: string;
    /**
     *
     * @type {string}
     * @memberof HumanTaskFileRestControllerApiGetPresignedUrlForFileDeletion
     */
    readonly filePath: string;
}
/**
 * Request parameters for getPresignedUrlForFileDownload operation in HumanTaskFileRestControllerApi.
 * @export
 * @interface HumanTaskFileRestControllerApiGetPresignedUrlForFileDownloadRequest
 */
export interface HumanTaskFileRestControllerApiGetPresignedUrlForFileDownloadRequest {
    /**
     *
     * @type {string}
     * @memberof HumanTaskFileRestControllerApiGetPresignedUrlForFileDownload
     */
    readonly taskId: string;
    /**
     *
     * @type {string}
     * @memberof HumanTaskFileRestControllerApiGetPresignedUrlForFileDownload
     */
    readonly fileName: string;
    /**
     *
     * @type {string}
     * @memberof HumanTaskFileRestControllerApiGetPresignedUrlForFileDownload
     */
    readonly filePath: string;
}
/**
 * Request parameters for getPresignedUrlForFileUpload operation in HumanTaskFileRestControllerApi.
 * @export
 * @interface HumanTaskFileRestControllerApiGetPresignedUrlForFileUploadRequest
 */
export interface HumanTaskFileRestControllerApiGetPresignedUrlForFileUploadRequest {
    /**
     *
     * @type {string}
     * @memberof HumanTaskFileRestControllerApiGetPresignedUrlForFileUpload
     */
    readonly taskId: string;
    /**
     *
     * @type {string}
     * @memberof HumanTaskFileRestControllerApiGetPresignedUrlForFileUpload
     */
    readonly filename: string;
    /**
     *
     * @type {string}
     * @memberof HumanTaskFileRestControllerApiGetPresignedUrlForFileUpload
     */
    readonly filePath: string;
}
/**
 * HumanTaskFileRestControllerApi - object-oriented interface
 * @export
 * @class HumanTaskFileRestControllerApi
 * @extends {BaseAPI}
 */
export declare class HumanTaskFileRestControllerApi extends BaseAPI {
    /**
     *
     * @param {HumanTaskFileRestControllerApiGetFileNamesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HumanTaskFileRestControllerApi
     */
    getFileNames(requestParameters: HumanTaskFileRestControllerApiGetFileNamesRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string[], any>>;
    /**
     *
     * @param {HumanTaskFileRestControllerApiGetPresignedUrlForFileDeletionRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HumanTaskFileRestControllerApi
     */
    getPresignedUrlForFileDeletion(requestParameters: HumanTaskFileRestControllerApiGetPresignedUrlForFileDeletionRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
    /**
     *
     * @param {HumanTaskFileRestControllerApiGetPresignedUrlForFileDownloadRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HumanTaskFileRestControllerApi
     */
    getPresignedUrlForFileDownload(requestParameters: HumanTaskFileRestControllerApiGetPresignedUrlForFileDownloadRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
    /**
     *
     * @param {HumanTaskFileRestControllerApiGetPresignedUrlForFileUploadRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HumanTaskFileRestControllerApi
     */
    getPresignedUrlForFileUpload(requestParameters: HumanTaskFileRestControllerApiGetPresignedUrlForFileUploadRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
}
/**
 * HumanTaskRestControllerApi - axios parameter creator
 * @export
 */
export declare const HumanTaskRestControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    assignTask: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cancelTask: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {CompleteTO} completeTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    completeTask: (completeTO: CompleteTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {FollowUpTO} followUpTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    followUpTask: (followUpTO: FollowUpTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {number} [page]
     * @param {number} [size]
     * @param {string} [query]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAssignedGroupTasks: (page?: number, size?: number, query?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {number} [page]
     * @param {number} [size]
     * @param {string} [query]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOpenGroupTasks: (page?: number, size?: number, query?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTaskDetail: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {number} [page]
     * @param {number} [size]
     * @param {string} [query]
     * @param {boolean} [followUp]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTasks: (page?: number, size?: number, query?: string, followUp?: boolean, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {SaveTO} saveTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    saveTask: (saveTO: SaveTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * HumanTaskRestControllerApi - functional programming interface
 * @export
 */
export declare const HumanTaskRestControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    assignTask(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cancelTask(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {CompleteTO} completeTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    completeTask(completeTO: CompleteTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {FollowUpTO} followUpTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    followUpTask(followUpTO: FollowUpTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {number} [page]
     * @param {number} [size]
     * @param {string} [query]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAssignedGroupTasks(page?: number, size?: number, query?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PageHumanTaskTO>>;
    /**
     *
     * @param {number} [page]
     * @param {number} [size]
     * @param {string} [query]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOpenGroupTasks(page?: number, size?: number, query?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PageHumanTaskTO>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTaskDetail(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<HumanTaskDetailTO>>;
    /**
     *
     * @param {number} [page]
     * @param {number} [size]
     * @param {string} [query]
     * @param {boolean} [followUp]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTasks(page?: number, size?: number, query?: string, followUp?: boolean, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PageHumanTaskTO>>;
    /**
     *
     * @param {SaveTO} saveTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    saveTask(saveTO: SaveTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * HumanTaskRestControllerApi - factory interface
 * @export
 */
export declare const HumanTaskRestControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    assignTask(id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cancelTask(id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {CompleteTO} completeTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    completeTask(completeTO: CompleteTO, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {FollowUpTO} followUpTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    followUpTask(followUpTO: FollowUpTO, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {number} [page]
     * @param {number} [size]
     * @param {string} [query]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAssignedGroupTasks(page?: number, size?: number, query?: string, options?: any): AxiosPromise<PageHumanTaskTO>;
    /**
     *
     * @param {number} [page]
     * @param {number} [size]
     * @param {string} [query]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOpenGroupTasks(page?: number, size?: number, query?: string, options?: any): AxiosPromise<PageHumanTaskTO>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTaskDetail(id: string, options?: any): AxiosPromise<HumanTaskDetailTO>;
    /**
     *
     * @param {number} [page]
     * @param {number} [size]
     * @param {string} [query]
     * @param {boolean} [followUp]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTasks(page?: number, size?: number, query?: string, followUp?: boolean, options?: any): AxiosPromise<PageHumanTaskTO>;
    /**
     *
     * @param {SaveTO} saveTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    saveTask(saveTO: SaveTO, options?: any): AxiosPromise<void>;
};
/**
 * Request parameters for assignTask operation in HumanTaskRestControllerApi.
 * @export
 * @interface HumanTaskRestControllerApiAssignTaskRequest
 */
export interface HumanTaskRestControllerApiAssignTaskRequest {
    /**
     *
     * @type {string}
     * @memberof HumanTaskRestControllerApiAssignTask
     */
    readonly id: string;
}
/**
 * Request parameters for cancelTask operation in HumanTaskRestControllerApi.
 * @export
 * @interface HumanTaskRestControllerApiCancelTaskRequest
 */
export interface HumanTaskRestControllerApiCancelTaskRequest {
    /**
     *
     * @type {string}
     * @memberof HumanTaskRestControllerApiCancelTask
     */
    readonly id: string;
}
/**
 * Request parameters for completeTask operation in HumanTaskRestControllerApi.
 * @export
 * @interface HumanTaskRestControllerApiCompleteTaskRequest
 */
export interface HumanTaskRestControllerApiCompleteTaskRequest {
    /**
     *
     * @type {CompleteTO}
     * @memberof HumanTaskRestControllerApiCompleteTask
     */
    readonly completeTO: CompleteTO;
}
/**
 * Request parameters for followUpTask operation in HumanTaskRestControllerApi.
 * @export
 * @interface HumanTaskRestControllerApiFollowUpTaskRequest
 */
export interface HumanTaskRestControllerApiFollowUpTaskRequest {
    /**
     *
     * @type {FollowUpTO}
     * @memberof HumanTaskRestControllerApiFollowUpTask
     */
    readonly followUpTO: FollowUpTO;
}
/**
 * Request parameters for getAssignedGroupTasks operation in HumanTaskRestControllerApi.
 * @export
 * @interface HumanTaskRestControllerApiGetAssignedGroupTasksRequest
 */
export interface HumanTaskRestControllerApiGetAssignedGroupTasksRequest {
    /**
     *
     * @type {number}
     * @memberof HumanTaskRestControllerApiGetAssignedGroupTasks
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof HumanTaskRestControllerApiGetAssignedGroupTasks
     */
    readonly size?: number;
    /**
     *
     * @type {string}
     * @memberof HumanTaskRestControllerApiGetAssignedGroupTasks
     */
    readonly query?: string;
}
/**
 * Request parameters for getOpenGroupTasks operation in HumanTaskRestControllerApi.
 * @export
 * @interface HumanTaskRestControllerApiGetOpenGroupTasksRequest
 */
export interface HumanTaskRestControllerApiGetOpenGroupTasksRequest {
    /**
     *
     * @type {number}
     * @memberof HumanTaskRestControllerApiGetOpenGroupTasks
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof HumanTaskRestControllerApiGetOpenGroupTasks
     */
    readonly size?: number;
    /**
     *
     * @type {string}
     * @memberof HumanTaskRestControllerApiGetOpenGroupTasks
     */
    readonly query?: string;
}
/**
 * Request parameters for getTaskDetail operation in HumanTaskRestControllerApi.
 * @export
 * @interface HumanTaskRestControllerApiGetTaskDetailRequest
 */
export interface HumanTaskRestControllerApiGetTaskDetailRequest {
    /**
     *
     * @type {string}
     * @memberof HumanTaskRestControllerApiGetTaskDetail
     */
    readonly id: string;
}
/**
 * Request parameters for getTasks operation in HumanTaskRestControllerApi.
 * @export
 * @interface HumanTaskRestControllerApiGetTasksRequest
 */
export interface HumanTaskRestControllerApiGetTasksRequest {
    /**
     *
     * @type {number}
     * @memberof HumanTaskRestControllerApiGetTasks
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof HumanTaskRestControllerApiGetTasks
     */
    readonly size?: number;
    /**
     *
     * @type {string}
     * @memberof HumanTaskRestControllerApiGetTasks
     */
    readonly query?: string;
    /**
     *
     * @type {boolean}
     * @memberof HumanTaskRestControllerApiGetTasks
     */
    readonly followUp?: boolean;
}
/**
 * Request parameters for saveTask operation in HumanTaskRestControllerApi.
 * @export
 * @interface HumanTaskRestControllerApiSaveTaskRequest
 */
export interface HumanTaskRestControllerApiSaveTaskRequest {
    /**
     *
     * @type {SaveTO}
     * @memberof HumanTaskRestControllerApiSaveTask
     */
    readonly saveTO: SaveTO;
}
/**
 * HumanTaskRestControllerApi - object-oriented interface
 * @export
 * @class HumanTaskRestControllerApi
 * @extends {BaseAPI}
 */
export declare class HumanTaskRestControllerApi extends BaseAPI {
    /**
     *
     * @param {HumanTaskRestControllerApiAssignTaskRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HumanTaskRestControllerApi
     */
    assignTask(requestParameters: HumanTaskRestControllerApiAssignTaskRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {HumanTaskRestControllerApiCancelTaskRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HumanTaskRestControllerApi
     */
    cancelTask(requestParameters: HumanTaskRestControllerApiCancelTaskRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {HumanTaskRestControllerApiCompleteTaskRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HumanTaskRestControllerApi
     */
    completeTask(requestParameters: HumanTaskRestControllerApiCompleteTaskRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {HumanTaskRestControllerApiFollowUpTaskRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HumanTaskRestControllerApi
     */
    followUpTask(requestParameters: HumanTaskRestControllerApiFollowUpTaskRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {HumanTaskRestControllerApiGetAssignedGroupTasksRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HumanTaskRestControllerApi
     */
    getAssignedGroupTasks(requestParameters?: HumanTaskRestControllerApiGetAssignedGroupTasksRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PageHumanTaskTO, any>>;
    /**
     *
     * @param {HumanTaskRestControllerApiGetOpenGroupTasksRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HumanTaskRestControllerApi
     */
    getOpenGroupTasks(requestParameters?: HumanTaskRestControllerApiGetOpenGroupTasksRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PageHumanTaskTO, any>>;
    /**
     *
     * @param {HumanTaskRestControllerApiGetTaskDetailRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HumanTaskRestControllerApi
     */
    getTaskDetail(requestParameters: HumanTaskRestControllerApiGetTaskDetailRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<HumanTaskDetailTO, any>>;
    /**
     *
     * @param {HumanTaskRestControllerApiGetTasksRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HumanTaskRestControllerApi
     */
    getTasks(requestParameters?: HumanTaskRestControllerApiGetTasksRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PageHumanTaskTO, any>>;
    /**
     *
     * @param {HumanTaskRestControllerApiSaveTaskRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HumanTaskRestControllerApi
     */
    saveTask(requestParameters: HumanTaskRestControllerApiSaveTaskRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
}
/**
 * InfoRestControllerApi - axios parameter creator
 * @export
 */
export declare const InfoRestControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getInfo: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * InfoRestControllerApi - functional programming interface
 * @export
 */
export declare const InfoRestControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getInfo(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InfoTO>>;
};
/**
 * InfoRestControllerApi - factory interface
 * @export
 */
export declare const InfoRestControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getInfo(options?: any): AxiosPromise<InfoTO>;
};
/**
 * InfoRestControllerApi - object-oriented interface
 * @export
 * @class InfoRestControllerApi
 * @extends {BaseAPI}
 */
export declare class InfoRestControllerApi extends BaseAPI {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InfoRestControllerApi
     */
    getInfo(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<InfoTO, any>>;
}
/**
 * MessageControllerApi - axios parameter creator
 * @export
 */
export declare const MessageControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {SendMessageTO} sendMessageTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sendMessage: (sendMessageTO: SendMessageTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * MessageControllerApi - functional programming interface
 * @export
 */
export declare const MessageControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {SendMessageTO} sendMessageTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sendMessage(sendMessageTO: SendMessageTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * MessageControllerApi - factory interface
 * @export
 */
export declare const MessageControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {SendMessageTO} sendMessageTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sendMessage(sendMessageTO: SendMessageTO, options?: any): AxiosPromise<void>;
};
/**
 * Request parameters for sendMessage operation in MessageControllerApi.
 * @export
 * @interface MessageControllerApiSendMessageRequest
 */
export interface MessageControllerApiSendMessageRequest {
    /**
     *
     * @type {SendMessageTO}
     * @memberof MessageControllerApiSendMessage
     */
    readonly sendMessageTO: SendMessageTO;
}
/**
 * MessageControllerApi - object-oriented interface
 * @export
 * @class MessageControllerApi
 * @extends {BaseAPI}
 */
export declare class MessageControllerApi extends BaseAPI {
    /**
     *
     * @param {MessageControllerApiSendMessageRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MessageControllerApi
     */
    sendMessage(requestParameters: MessageControllerApiSendMessageRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
}
/**
 * ProcessConfigurationControllerApi - axios parameter creator
 * @export
 */
export declare const ProcessConfigurationControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {ProcessConfigTO} processConfigTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createConfig: (processConfigTO: ProcessConfigTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} key
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getConfig: (key: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ProcessConfigurationControllerApi - functional programming interface
 * @export
 */
export declare const ProcessConfigurationControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {ProcessConfigTO} processConfigTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createConfig(processConfigTO: ProcessConfigTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ProcessConfigTO>>;
    /**
     *
     * @param {string} key
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getConfig(key: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ProcessConfigTO>>;
};
/**
 * ProcessConfigurationControllerApi - factory interface
 * @export
 */
export declare const ProcessConfigurationControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {ProcessConfigTO} processConfigTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createConfig(processConfigTO: ProcessConfigTO, options?: any): AxiosPromise<ProcessConfigTO>;
    /**
     *
     * @param {string} key
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getConfig(key: string, options?: any): AxiosPromise<ProcessConfigTO>;
};
/**
 * Request parameters for createConfig operation in ProcessConfigurationControllerApi.
 * @export
 * @interface ProcessConfigurationControllerApiCreateConfigRequest
 */
export interface ProcessConfigurationControllerApiCreateConfigRequest {
    /**
     *
     * @type {ProcessConfigTO}
     * @memberof ProcessConfigurationControllerApiCreateConfig
     */
    readonly processConfigTO: ProcessConfigTO;
}
/**
 * Request parameters for getConfig operation in ProcessConfigurationControllerApi.
 * @export
 * @interface ProcessConfigurationControllerApiGetConfigRequest
 */
export interface ProcessConfigurationControllerApiGetConfigRequest {
    /**
     *
     * @type {string}
     * @memberof ProcessConfigurationControllerApiGetConfig
     */
    readonly key: string;
}
/**
 * ProcessConfigurationControllerApi - object-oriented interface
 * @export
 * @class ProcessConfigurationControllerApi
 * @extends {BaseAPI}
 */
export declare class ProcessConfigurationControllerApi extends BaseAPI {
    /**
     *
     * @param {ProcessConfigurationControllerApiCreateConfigRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProcessConfigurationControllerApi
     */
    createConfig(requestParameters: ProcessConfigurationControllerApiCreateConfigRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ProcessConfigTO, any>>;
    /**
     *
     * @param {ProcessConfigurationControllerApiGetConfigRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProcessConfigurationControllerApi
     */
    getConfig(requestParameters: ProcessConfigurationControllerApiGetConfigRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ProcessConfigTO, any>>;
}
/**
 * SchemaRestControllerApi - axios parameter creator
 * @export
 */
export declare const SchemaRestControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * create a new json schema
     * @param {JsonSchemaTO} jsonSchemaTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createJsonSchema: (jsonSchemaTO: JsonSchemaTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * get json schema by key
     * @param {string} key
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getJsonSchema: (key: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * SchemaRestControllerApi - functional programming interface
 * @export
 */
export declare const SchemaRestControllerApiFp: (configuration?: Configuration) => {
    /**
     * create a new json schema
     * @param {JsonSchemaTO} jsonSchemaTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createJsonSchema(jsonSchemaTO: JsonSchemaTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<JsonSchemaTO>>;
    /**
     * get json schema by key
     * @param {string} key
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getJsonSchema(key: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<JsonSchemaTO>>;
};
/**
 * SchemaRestControllerApi - factory interface
 * @export
 */
export declare const SchemaRestControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * create a new json schema
     * @param {JsonSchemaTO} jsonSchemaTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createJsonSchema(jsonSchemaTO: JsonSchemaTO, options?: any): AxiosPromise<JsonSchemaTO>;
    /**
     * get json schema by key
     * @param {string} key
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getJsonSchema(key: string, options?: any): AxiosPromise<JsonSchemaTO>;
};
/**
 * Request parameters for createJsonSchema operation in SchemaRestControllerApi.
 * @export
 * @interface SchemaRestControllerApiCreateJsonSchemaRequest
 */
export interface SchemaRestControllerApiCreateJsonSchemaRequest {
    /**
     *
     * @type {JsonSchemaTO}
     * @memberof SchemaRestControllerApiCreateJsonSchema
     */
    readonly jsonSchemaTO: JsonSchemaTO;
}
/**
 * Request parameters for getJsonSchema operation in SchemaRestControllerApi.
 * @export
 * @interface SchemaRestControllerApiGetJsonSchemaRequest
 */
export interface SchemaRestControllerApiGetJsonSchemaRequest {
    /**
     *
     * @type {string}
     * @memberof SchemaRestControllerApiGetJsonSchema
     */
    readonly key: string;
}
/**
 * SchemaRestControllerApi - object-oriented interface
 * @export
 * @class SchemaRestControllerApi
 * @extends {BaseAPI}
 */
export declare class SchemaRestControllerApi extends BaseAPI {
    /**
     * create a new json schema
     * @param {SchemaRestControllerApiCreateJsonSchemaRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SchemaRestControllerApi
     */
    createJsonSchema(requestParameters: SchemaRestControllerApiCreateJsonSchemaRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<JsonSchemaTO, any>>;
    /**
     * get json schema by key
     * @param {SchemaRestControllerApiGetJsonSchemaRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SchemaRestControllerApi
     */
    getJsonSchema(requestParameters: SchemaRestControllerApiGetJsonSchemaRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<JsonSchemaTO, any>>;
}
/**
 * ServiceDefinitionControllerApi - axios parameter creator
 * @export
 */
export declare const ServiceDefinitionControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Get a specific service definition
     * @param {string} key
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getServiceDefinition: (key: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * load all available service definitions
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getServiceDefinitions: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Start a specific service
     * @param {StartInstanceTO} startInstanceTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    startInstance: (startInstanceTO: StartInstanceTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ServiceDefinitionControllerApi - functional programming interface
 * @export
 */
export declare const ServiceDefinitionControllerApiFp: (configuration?: Configuration) => {
    /**
     * Get a specific service definition
     * @param {string} key
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getServiceDefinition(key: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ServiceDefinitionDetailTO>>;
    /**
     * load all available service definitions
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getServiceDefinitions(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ServiceDefinitionTO>>>;
    /**
     * Start a specific service
     * @param {StartInstanceTO} startInstanceTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    startInstance(startInstanceTO: StartInstanceTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * ServiceDefinitionControllerApi - factory interface
 * @export
 */
export declare const ServiceDefinitionControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Get a specific service definition
     * @param {string} key
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getServiceDefinition(key: string, options?: any): AxiosPromise<ServiceDefinitionDetailTO>;
    /**
     * load all available service definitions
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getServiceDefinitions(options?: any): AxiosPromise<Array<ServiceDefinitionTO>>;
    /**
     * Start a specific service
     * @param {StartInstanceTO} startInstanceTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    startInstance(startInstanceTO: StartInstanceTO, options?: any): AxiosPromise<void>;
};
/**
 * Request parameters for getServiceDefinition operation in ServiceDefinitionControllerApi.
 * @export
 * @interface ServiceDefinitionControllerApiGetServiceDefinitionRequest
 */
export interface ServiceDefinitionControllerApiGetServiceDefinitionRequest {
    /**
     *
     * @type {string}
     * @memberof ServiceDefinitionControllerApiGetServiceDefinition
     */
    readonly key: string;
}
/**
 * Request parameters for startInstance operation in ServiceDefinitionControllerApi.
 * @export
 * @interface ServiceDefinitionControllerApiStartInstanceRequest
 */
export interface ServiceDefinitionControllerApiStartInstanceRequest {
    /**
     *
     * @type {StartInstanceTO}
     * @memberof ServiceDefinitionControllerApiStartInstance
     */
    readonly startInstanceTO: StartInstanceTO;
}
/**
 * ServiceDefinitionControllerApi - object-oriented interface
 * @export
 * @class ServiceDefinitionControllerApi
 * @extends {BaseAPI}
 */
export declare class ServiceDefinitionControllerApi extends BaseAPI {
    /**
     * Get a specific service definition
     * @param {ServiceDefinitionControllerApiGetServiceDefinitionRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServiceDefinitionControllerApi
     */
    getServiceDefinition(requestParameters: ServiceDefinitionControllerApiGetServiceDefinitionRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ServiceDefinitionDetailTO, any>>;
    /**
     * load all available service definitions
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServiceDefinitionControllerApi
     */
    getServiceDefinitions(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ServiceDefinitionTO[], any>>;
    /**
     * Start a specific service
     * @param {ServiceDefinitionControllerApiStartInstanceRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServiceDefinitionControllerApi
     */
    startInstance(requestParameters: ServiceDefinitionControllerApiStartInstanceRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
}
/**
 * ServiceInstanceControllerApi - axios parameter creator
 * @export
 */
export declare const ServiceInstanceControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAssignedInstances: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getProcessInstanceDetail: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ServiceInstanceControllerApi - functional programming interface
 * @export
 */
export declare const ServiceInstanceControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAssignedInstances(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ServiceInstanceTO>>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getProcessInstanceDetail(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ServiceInstanceDetailTO>>;
};
/**
 * ServiceInstanceControllerApi - factory interface
 * @export
 */
export declare const ServiceInstanceControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAssignedInstances(options?: any): AxiosPromise<Array<ServiceInstanceTO>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getProcessInstanceDetail(id: string, options?: any): AxiosPromise<ServiceInstanceDetailTO>;
};
/**
 * Request parameters for getProcessInstanceDetail operation in ServiceInstanceControllerApi.
 * @export
 * @interface ServiceInstanceControllerApiGetProcessInstanceDetailRequest
 */
export interface ServiceInstanceControllerApiGetProcessInstanceDetailRequest {
    /**
     *
     * @type {string}
     * @memberof ServiceInstanceControllerApiGetProcessInstanceDetail
     */
    readonly id: string;
}
/**
 * ServiceInstanceControllerApi - object-oriented interface
 * @export
 * @class ServiceInstanceControllerApi
 * @extends {BaseAPI}
 */
export declare class ServiceInstanceControllerApi extends BaseAPI {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServiceInstanceControllerApi
     */
    getAssignedInstances(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ServiceInstanceTO[], any>>;
    /**
     *
     * @param {ServiceInstanceControllerApiGetProcessInstanceDetailRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServiceInstanceControllerApi
     */
    getProcessInstanceDetail(requestParameters: ServiceInstanceControllerApiGetProcessInstanceDetailRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ServiceInstanceDetailTO, any>>;
}
/**
 * ServiceInstanceFileRestControllerApi - axios parameter creator
 * @export
 */
export declare const ServiceInstanceFileRestControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} instanceId
     * @param {string} filePath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getFileNames2: (instanceId: string, filePath: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} instanceId
     * @param {string} filename
     * @param {string} filePath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPresignedUrlForFileDeletion2: (instanceId: string, filename: string, filePath: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} instanceId
     * @param {string} fileName
     * @param {string} filePath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPresignedUrlForFileDownload2: (instanceId: string, fileName: string, filePath: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} instanceId
     * @param {string} filename
     * @param {string} filePath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPresignedUrlForFileUpload2: (instanceId: string, filename: string, filePath: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ServiceInstanceFileRestControllerApi - functional programming interface
 * @export
 */
export declare const ServiceInstanceFileRestControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} instanceId
     * @param {string} filePath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getFileNames2(instanceId: string, filePath: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<string>>>;
    /**
     *
     * @param {string} instanceId
     * @param {string} filename
     * @param {string} filePath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPresignedUrlForFileDeletion2(instanceId: string, filename: string, filePath: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
    /**
     *
     * @param {string} instanceId
     * @param {string} fileName
     * @param {string} filePath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPresignedUrlForFileDownload2(instanceId: string, fileName: string, filePath: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
    /**
     *
     * @param {string} instanceId
     * @param {string} filename
     * @param {string} filePath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPresignedUrlForFileUpload2(instanceId: string, filename: string, filePath: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
};
/**
 * ServiceInstanceFileRestControllerApi - factory interface
 * @export
 */
export declare const ServiceInstanceFileRestControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} instanceId
     * @param {string} filePath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getFileNames2(instanceId: string, filePath: string, options?: any): AxiosPromise<Array<string>>;
    /**
     *
     * @param {string} instanceId
     * @param {string} filename
     * @param {string} filePath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPresignedUrlForFileDeletion2(instanceId: string, filename: string, filePath: string, options?: any): AxiosPromise<string>;
    /**
     *
     * @param {string} instanceId
     * @param {string} fileName
     * @param {string} filePath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPresignedUrlForFileDownload2(instanceId: string, fileName: string, filePath: string, options?: any): AxiosPromise<string>;
    /**
     *
     * @param {string} instanceId
     * @param {string} filename
     * @param {string} filePath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPresignedUrlForFileUpload2(instanceId: string, filename: string, filePath: string, options?: any): AxiosPromise<string>;
};
/**
 * Request parameters for getFileNames2 operation in ServiceInstanceFileRestControllerApi.
 * @export
 * @interface ServiceInstanceFileRestControllerApiGetFileNames2Request
 */
export interface ServiceInstanceFileRestControllerApiGetFileNames2Request {
    /**
     *
     * @type {string}
     * @memberof ServiceInstanceFileRestControllerApiGetFileNames2
     */
    readonly instanceId: string;
    /**
     *
     * @type {string}
     * @memberof ServiceInstanceFileRestControllerApiGetFileNames2
     */
    readonly filePath: string;
}
/**
 * Request parameters for getPresignedUrlForFileDeletion2 operation in ServiceInstanceFileRestControllerApi.
 * @export
 * @interface ServiceInstanceFileRestControllerApiGetPresignedUrlForFileDeletion2Request
 */
export interface ServiceInstanceFileRestControllerApiGetPresignedUrlForFileDeletion2Request {
    /**
     *
     * @type {string}
     * @memberof ServiceInstanceFileRestControllerApiGetPresignedUrlForFileDeletion2
     */
    readonly instanceId: string;
    /**
     *
     * @type {string}
     * @memberof ServiceInstanceFileRestControllerApiGetPresignedUrlForFileDeletion2
     */
    readonly filename: string;
    /**
     *
     * @type {string}
     * @memberof ServiceInstanceFileRestControllerApiGetPresignedUrlForFileDeletion2
     */
    readonly filePath: string;
}
/**
 * Request parameters for getPresignedUrlForFileDownload2 operation in ServiceInstanceFileRestControllerApi.
 * @export
 * @interface ServiceInstanceFileRestControllerApiGetPresignedUrlForFileDownload2Request
 */
export interface ServiceInstanceFileRestControllerApiGetPresignedUrlForFileDownload2Request {
    /**
     *
     * @type {string}
     * @memberof ServiceInstanceFileRestControllerApiGetPresignedUrlForFileDownload2
     */
    readonly instanceId: string;
    /**
     *
     * @type {string}
     * @memberof ServiceInstanceFileRestControllerApiGetPresignedUrlForFileDownload2
     */
    readonly fileName: string;
    /**
     *
     * @type {string}
     * @memberof ServiceInstanceFileRestControllerApiGetPresignedUrlForFileDownload2
     */
    readonly filePath: string;
}
/**
 * Request parameters for getPresignedUrlForFileUpload2 operation in ServiceInstanceFileRestControllerApi.
 * @export
 * @interface ServiceInstanceFileRestControllerApiGetPresignedUrlForFileUpload2Request
 */
export interface ServiceInstanceFileRestControllerApiGetPresignedUrlForFileUpload2Request {
    /**
     *
     * @type {string}
     * @memberof ServiceInstanceFileRestControllerApiGetPresignedUrlForFileUpload2
     */
    readonly instanceId: string;
    /**
     *
     * @type {string}
     * @memberof ServiceInstanceFileRestControllerApiGetPresignedUrlForFileUpload2
     */
    readonly filename: string;
    /**
     *
     * @type {string}
     * @memberof ServiceInstanceFileRestControllerApiGetPresignedUrlForFileUpload2
     */
    readonly filePath: string;
}
/**
 * ServiceInstanceFileRestControllerApi - object-oriented interface
 * @export
 * @class ServiceInstanceFileRestControllerApi
 * @extends {BaseAPI}
 */
export declare class ServiceInstanceFileRestControllerApi extends BaseAPI {
    /**
     *
     * @param {ServiceInstanceFileRestControllerApiGetFileNames2Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServiceInstanceFileRestControllerApi
     */
    getFileNames2(requestParameters: ServiceInstanceFileRestControllerApiGetFileNames2Request, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string[], any>>;
    /**
     *
     * @param {ServiceInstanceFileRestControllerApiGetPresignedUrlForFileDeletion2Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServiceInstanceFileRestControllerApi
     */
    getPresignedUrlForFileDeletion2(requestParameters: ServiceInstanceFileRestControllerApiGetPresignedUrlForFileDeletion2Request, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
    /**
     *
     * @param {ServiceInstanceFileRestControllerApiGetPresignedUrlForFileDownload2Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServiceInstanceFileRestControllerApi
     */
    getPresignedUrlForFileDownload2(requestParameters: ServiceInstanceFileRestControllerApiGetPresignedUrlForFileDownload2Request, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
    /**
     *
     * @param {ServiceInstanceFileRestControllerApiGetPresignedUrlForFileUpload2Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServiceInstanceFileRestControllerApi
     */
    getPresignedUrlForFileUpload2(requestParameters: ServiceInstanceFileRestControllerApiGetPresignedUrlForFileUpload2Request, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
}
/**
 * ServiceStartFileRestControllerApi - axios parameter creator
 * @export
 */
export declare const ServiceStartFileRestControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} definitionKey
     * @param {string} filePath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getFileNames1: (definitionKey: string, filePath: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} definitionKey
     * @param {string} filename
     * @param {string} filePath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPresignedUrlForFileDeletion1: (definitionKey: string, filename: string, filePath: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} definitionKey
     * @param {string} fileName
     * @param {string} filePath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPresignedUrlForFileDownload1: (definitionKey: string, fileName: string, filePath: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} definitionKey
     * @param {string} filename
     * @param {string} filePath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPresignedUrlForFileUpload1: (definitionKey: string, filename: string, filePath: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ServiceStartFileRestControllerApi - functional programming interface
 * @export
 */
export declare const ServiceStartFileRestControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} definitionKey
     * @param {string} filePath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getFileNames1(definitionKey: string, filePath: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<string>>>;
    /**
     *
     * @param {string} definitionKey
     * @param {string} filename
     * @param {string} filePath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPresignedUrlForFileDeletion1(definitionKey: string, filename: string, filePath: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
    /**
     *
     * @param {string} definitionKey
     * @param {string} fileName
     * @param {string} filePath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPresignedUrlForFileDownload1(definitionKey: string, fileName: string, filePath: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
    /**
     *
     * @param {string} definitionKey
     * @param {string} filename
     * @param {string} filePath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPresignedUrlForFileUpload1(definitionKey: string, filename: string, filePath: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
};
/**
 * ServiceStartFileRestControllerApi - factory interface
 * @export
 */
export declare const ServiceStartFileRestControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} definitionKey
     * @param {string} filePath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getFileNames1(definitionKey: string, filePath: string, options?: any): AxiosPromise<Array<string>>;
    /**
     *
     * @param {string} definitionKey
     * @param {string} filename
     * @param {string} filePath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPresignedUrlForFileDeletion1(definitionKey: string, filename: string, filePath: string, options?: any): AxiosPromise<string>;
    /**
     *
     * @param {string} definitionKey
     * @param {string} fileName
     * @param {string} filePath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPresignedUrlForFileDownload1(definitionKey: string, fileName: string, filePath: string, options?: any): AxiosPromise<string>;
    /**
     *
     * @param {string} definitionKey
     * @param {string} filename
     * @param {string} filePath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPresignedUrlForFileUpload1(definitionKey: string, filename: string, filePath: string, options?: any): AxiosPromise<string>;
};
/**
 * Request parameters for getFileNames1 operation in ServiceStartFileRestControllerApi.
 * @export
 * @interface ServiceStartFileRestControllerApiGetFileNames1Request
 */
export interface ServiceStartFileRestControllerApiGetFileNames1Request {
    /**
     *
     * @type {string}
     * @memberof ServiceStartFileRestControllerApiGetFileNames1
     */
    readonly definitionKey: string;
    /**
     *
     * @type {string}
     * @memberof ServiceStartFileRestControllerApiGetFileNames1
     */
    readonly filePath: string;
}
/**
 * Request parameters for getPresignedUrlForFileDeletion1 operation in ServiceStartFileRestControllerApi.
 * @export
 * @interface ServiceStartFileRestControllerApiGetPresignedUrlForFileDeletion1Request
 */
export interface ServiceStartFileRestControllerApiGetPresignedUrlForFileDeletion1Request {
    /**
     *
     * @type {string}
     * @memberof ServiceStartFileRestControllerApiGetPresignedUrlForFileDeletion1
     */
    readonly definitionKey: string;
    /**
     *
     * @type {string}
     * @memberof ServiceStartFileRestControllerApiGetPresignedUrlForFileDeletion1
     */
    readonly filename: string;
    /**
     *
     * @type {string}
     * @memberof ServiceStartFileRestControllerApiGetPresignedUrlForFileDeletion1
     */
    readonly filePath: string;
}
/**
 * Request parameters for getPresignedUrlForFileDownload1 operation in ServiceStartFileRestControllerApi.
 * @export
 * @interface ServiceStartFileRestControllerApiGetPresignedUrlForFileDownload1Request
 */
export interface ServiceStartFileRestControllerApiGetPresignedUrlForFileDownload1Request {
    /**
     *
     * @type {string}
     * @memberof ServiceStartFileRestControllerApiGetPresignedUrlForFileDownload1
     */
    readonly definitionKey: string;
    /**
     *
     * @type {string}
     * @memberof ServiceStartFileRestControllerApiGetPresignedUrlForFileDownload1
     */
    readonly fileName: string;
    /**
     *
     * @type {string}
     * @memberof ServiceStartFileRestControllerApiGetPresignedUrlForFileDownload1
     */
    readonly filePath: string;
}
/**
 * Request parameters for getPresignedUrlForFileUpload1 operation in ServiceStartFileRestControllerApi.
 * @export
 * @interface ServiceStartFileRestControllerApiGetPresignedUrlForFileUpload1Request
 */
export interface ServiceStartFileRestControllerApiGetPresignedUrlForFileUpload1Request {
    /**
     *
     * @type {string}
     * @memberof ServiceStartFileRestControllerApiGetPresignedUrlForFileUpload1
     */
    readonly definitionKey: string;
    /**
     *
     * @type {string}
     * @memberof ServiceStartFileRestControllerApiGetPresignedUrlForFileUpload1
     */
    readonly filename: string;
    /**
     *
     * @type {string}
     * @memberof ServiceStartFileRestControllerApiGetPresignedUrlForFileUpload1
     */
    readonly filePath: string;
}
/**
 * ServiceStartFileRestControllerApi - object-oriented interface
 * @export
 * @class ServiceStartFileRestControllerApi
 * @extends {BaseAPI}
 */
export declare class ServiceStartFileRestControllerApi extends BaseAPI {
    /**
     *
     * @param {ServiceStartFileRestControllerApiGetFileNames1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServiceStartFileRestControllerApi
     */
    getFileNames1(requestParameters: ServiceStartFileRestControllerApiGetFileNames1Request, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string[], any>>;
    /**
     *
     * @param {ServiceStartFileRestControllerApiGetPresignedUrlForFileDeletion1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServiceStartFileRestControllerApi
     */
    getPresignedUrlForFileDeletion1(requestParameters: ServiceStartFileRestControllerApiGetPresignedUrlForFileDeletion1Request, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
    /**
     *
     * @param {ServiceStartFileRestControllerApiGetPresignedUrlForFileDownload1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServiceStartFileRestControllerApi
     */
    getPresignedUrlForFileDownload1(requestParameters: ServiceStartFileRestControllerApiGetPresignedUrlForFileDownload1Request, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
    /**
     *
     * @param {ServiceStartFileRestControllerApiGetPresignedUrlForFileUpload1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServiceStartFileRestControllerApi
     */
    getPresignedUrlForFileUpload1(requestParameters: ServiceStartFileRestControllerApiGetPresignedUrlForFileUpload1Request, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
}
/**
 * UserRestControllerApi - axios parameter creator
 * @export
 */
export declare const UserRestControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUser: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} username
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUserByUsername: (username: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {SearchUserTO} searchUserTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUsers: (searchUserTO: SearchUserTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    userinfo: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * UserRestControllerApi - functional programming interface
 * @export
 */
export declare const UserRestControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUser(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserTO>>;
    /**
     *
     * @param {string} username
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUserByUsername(username: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserTO>>;
    /**
     *
     * @param {SearchUserTO} searchUserTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUsers(searchUserTO: SearchUserTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<UserTO>>>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    userinfo(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserTO>>;
};
/**
 * UserRestControllerApi - factory interface
 * @export
 */
export declare const UserRestControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUser(id: string, options?: any): AxiosPromise<UserTO>;
    /**
     *
     * @param {string} username
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUserByUsername(username: string, options?: any): AxiosPromise<UserTO>;
    /**
     *
     * @param {SearchUserTO} searchUserTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUsers(searchUserTO: SearchUserTO, options?: any): AxiosPromise<Array<UserTO>>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    userinfo(options?: any): AxiosPromise<UserTO>;
};
/**
 * Request parameters for getUser operation in UserRestControllerApi.
 * @export
 * @interface UserRestControllerApiGetUserRequest
 */
export interface UserRestControllerApiGetUserRequest {
    /**
     *
     * @type {string}
     * @memberof UserRestControllerApiGetUser
     */
    readonly id: string;
}
/**
 * Request parameters for getUserByUsername operation in UserRestControllerApi.
 * @export
 * @interface UserRestControllerApiGetUserByUsernameRequest
 */
export interface UserRestControllerApiGetUserByUsernameRequest {
    /**
     *
     * @type {string}
     * @memberof UserRestControllerApiGetUserByUsername
     */
    readonly username: string;
}
/**
 * Request parameters for getUsers operation in UserRestControllerApi.
 * @export
 * @interface UserRestControllerApiGetUsersRequest
 */
export interface UserRestControllerApiGetUsersRequest {
    /**
     *
     * @type {SearchUserTO}
     * @memberof UserRestControllerApiGetUsers
     */
    readonly searchUserTO: SearchUserTO;
}
/**
 * UserRestControllerApi - object-oriented interface
 * @export
 * @class UserRestControllerApi
 * @extends {BaseAPI}
 */
export declare class UserRestControllerApi extends BaseAPI {
    /**
     *
     * @param {UserRestControllerApiGetUserRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserRestControllerApi
     */
    getUser(requestParameters: UserRestControllerApiGetUserRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<UserTO, any>>;
    /**
     *
     * @param {UserRestControllerApiGetUserByUsernameRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserRestControllerApi
     */
    getUserByUsername(requestParameters: UserRestControllerApiGetUserByUsernameRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<UserTO, any>>;
    /**
     *
     * @param {UserRestControllerApiGetUsersRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserRestControllerApi
     */
    getUsers(requestParameters: UserRestControllerApiGetUsersRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<UserTO[], any>>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserRestControllerApi
     */
    userinfo(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<UserTO, any>>;
}
