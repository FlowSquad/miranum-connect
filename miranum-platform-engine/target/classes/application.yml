camunda:
  bpm:
    admin-user:
      id: admin
      first-name: Admin
      last-name: Administrarius
      email: admin@localhost
      password: admin
    authorization:
      enabled: false
    login:
      enabled: true
      user-id: admin
    database:
      schema-update: true
    default-serialization-format: application/json
    eventing:
      task: false
    filter:
      create: All tasks
    history-level: full
    id-generator: strong
    metrics:
      db-reporter-activate: false
      enabled: false
    webapp:
      index-redirect-enabled: false

polyflow:
  integration:
    client:
      camunda:
        application-name: ${spring.application.name}  # default
    collector:
      camunda:
        application-name: ${spring.application.name}  # default
        process-instance:
          enabled: false
        process-definition:
          enabled: true
        process-variable:
          enabled: false
        task:
          enabled: true
          enricher:
            type: processVariables
          importer:
            enabled: true
            task-filter-type: eventstore

    form-url-resolver:
      default-application-template: "http://localhost:${server.port}/${applicationName}"
      default-task-template: "tasks/${formKey}/${id}?userId=%userId%"
      default-process-template: "${formKey}?userId=%userId%"
      applications:
        example-process-approval:
          url: "http://localhost:${server.port}/${spring.application.name}"
          processes:
            process_approve_request: "start?userId=%userId%"
          data-entries:
            io.holunda.camunda.taskpool.example.ApprovalRequest: "approval-request/${entryId}?userId=%userId%"
    sender:
      enabled: true
      data-entry:
        enabled: true
        type: simple
        application-name: ${spring.application.name}  # default
      process-definition:
        enabled: true
      process-instance:
        enabled: false
      process-variable:
        enabled: false
      task:
        enabled: true
        type: tx
        send-within-transaction: true # Must be set to true in single node scenario, because the TX of Camunda must be the same as TX of Axon.
    tasklist:
      tasklist-url: http://localhost:${server.port}/polyflow/tasks
  view:
    jpa:
      payload-attribute-level-limit: 2
      stored-items: task, process-instance, process-definition, data-entry


logging.level:
  root: INFO
  io.holunda.camunda:
    taskpool.core: INFO
  io.holunda.polyflow:
    taskpool:
      collector:
        process:
          variable: INFO
      sender: INFO
      core: WARN
      view.simple: INFO
    datapool:
      sender: INFO
    view.jpa: INFO