# Use this only in dev environments. It's not intended for production usage.
version: '3.9'
services:

  nginx:
    image: nginx:1.24.0
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8080:8080"
    depends_on:
      - keycloak
    networks:
      - internal

  keycloak:
    image: ${KEYCLOAK_IMAGE:-quay.io/keycloak/keycloak:20.0.3}
    container_name: keycloak
    depends_on:
      - ${LOCAL_DB_VENDOR}
    expose:
      - '8080'
    command: 'start-dev --http-relative-path /auth'
    environment:
      KC_HOSTNAME: keycloak # this hostname must be resolved to 127.0.0.1 locally. Add it to your hosts file.
      KC_HOSTNAME_STRICT: 'false'
      KC_DB: ${LOCAL_DB_VENDOR}
      KC_DB_URL: ${SSO_DATASOURCE_URL}
      KC_DB_USERNAME: ${SSO_DATASOURCE_USERNAME}
      KC_DB_PASSWORD: ${SSO_DATASOURCE_PASSWORD}
      KEYCLOAK_ADMIN: ${SSO_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${SSO_ADMIN_PASSWORD:-admin}
    networks:
      - local-keycloak
      - internal

  keycloak-init:
    image: klg71/keycloakmigration
    container_name: keycloak-init
    depends_on:
      - ${LOCAL_DB_VENDOR}
    environment:
      ADMIN_USER: admin
      ADMIN_PASSWORD: admin
      BASEURL: http://keycloak:8080/auth
      WAIT_FOR_KEYCLOAK: 'true'
      KEYCLOAK_CHANGELOG: /migration/keycloak-changelog.yml
    volumes:
      - './keycloak:/migration'
    networks:
      - local-keycloak

  postgres:
    image: postgres:13.2
    container_name: postgres
    volumes:
      - ./postgres:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    restart: unless-stopped
    environment:
      - POSTGRES_MULTIPLE_DATABASES=${ENGINE_DATASOURCE_DB},sa:${SCHEMA_DATASOURCE_DB},sa:${SSO_DATASOURCE_DB}
      - POSTGRES_PASSWORD=${LOCAL_DATASOURCE_PASSWORD}
      - POSTGRES_USER=${LOCAL_DATASOURCE_USERNAME}
    networks:
      - internal

  mssql:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: mssql
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: ${LOCAL_DATASOURCE_PASSWORD}
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Developer"
    networks:
      - internal

  sqlserver.configurator:
    image: mcr.microsoft.com/mssql/server:2019-latest
    volumes:
      - ./mssql:/docker-entrypoint-initdb.d
    depends_on:
      - mssql
    command: >
      bash -c '
      /opt/mssql-tools/bin/sqlcmd -S mssql -U sa -P '${LOCAL_DATASOURCE_PASSWORD}' -d master -i docker-entrypoint-initdb.d/setup.sql;
      echo "All done!";
      '
    networks:
      - internal

networks:
  local-keycloak:
  internal:
